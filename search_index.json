{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["algorithm","coursera","introduct","python设计模式基础","ss","七大基本原则","算法可视化","课程学习","辅助工具"],"Chapter1/":["#","##","###","####","#####","'''","(4,","(5,","(6,","(backward","(bottom)","(combin","(forward","*","**","***","****","*****","+","0:","1)","10","3","5,","6)","6,","7)","7,","8)","8}","==","action","action结合","algorithm","backtrack","base","call","class","combin","combinatori","comput","criteria","def","differ","drop","each","earli","easili","element","elements。","example:","exit","extract","find","gener","itself","k","larger","math","member","n","non","on:","paramet","perspect","possibl","post","pre","print(\"#\"*n)","print(\"*\"*n)","printfigure(5)","printfigure(n","printfigure(n):","problem","recurs","repetit","repres","return","select","set","solut","stack","step","subset","through","travel","tri","valu","way","way)","ways:","without","{4,","与for,combinations思想，以及pr","第一章","递归(recursion)"],"Chapter1/Recursive-Array-Sum.html":["(instead","(obtain","+","////","0)","1","1);","2/28/19","=","==","args)","arr","arr[],int","arr[index]+findsum(arr,index","arr[index];","array.","bottomm","call","class","current","element","exercise.","findsum(arr,arr.length","findsum(int","findsum).","here","if(index","index){","int","int[]","int[]{1,2,3,4,5,6};","iter","main(string[]","method","more","new","next","note:","practic","public","recurs","recursivearray","result","return","set","solution),","static","stop","sum","system.out.println(result);","todo:","us","void","{","}","•","数组求和"],"Chapter1/generate01.html":["'''","000","001","010","011","100","101","110","111","2","=","==","[none]*3","arr","arr[n]","def","gen01(arr,0)","gen01(arr,n):","gen01(arr,n+1)","len(arr):","n","print(*arr,sep=\"\")","range(2):","return","生成所有的01组合","通过for循环依次处理每一个位置然后递归"],"Chapter1/combineGenerator.html":["#因为不重复，所以剔除已经选过的，startnum+1","'''","(",")","3","4","5","6","7","8","8的数字组合,不重复","=",">=","[none]*3","arr","arr[index]","def","gencombs(arr,0,4,8)","gencombs(arr,index+1,i+1,endnum)","gencombs(arr,index,startnum,endnum):","i;","index","len(arr):","print(\"(\",*arr,\")\")","range(startnum,endnum+1):","return","所有数字组合","这张图是组合所有元素，允许重复","这题是打印出所有4"],"Chapter1/eight-Queen-puzzle.html":["//defin","//write","0;","4","8;","=","==","algorithm","attack","attackedcolumn","attackedleftdiagon","attackedrightdiagon","backtrack","boolean[15];","boolean[8];","boolean[]","boolean[][]","boolean[size][size];","chang","check","chessboard","class","col=0;col","complex","data","directli","each","final","for(int","hold","if(row","int","int[,]","it.","keep","maintain","mani","matrix","new","placement/removal.","posit","printsolution();","public","putqueens(int","queen","queepuzzl","row){","size","size)","softuni中给了很详细的解答","solutionfound","static","structur","void","{","八皇后问题","分别用列，左斜线，右斜线来代替在整个棋盘上找冲突","很巧妙的转换:"],"Chapter1/find-and-print-paths.html":["!=","\"(","\"+this.col+\"","\"+this.row+\"","%d","'","'){","'*',","',","';","'e'","'e'){","'e'},","'v';","'},","(","(*)","(bottom","(can","(col>=col_len)","(row,col)","(row=row_len)","(to","(x","(x+1,y)","(x,i","(x,y)","(x,y+1)",")",")\";",")\\n\",finalrow,finalcol);","){","*","*/",",","/**","//","//append","//check","//down","//invok","//left","//mark","//remov","//right","//system.out.println(\"found","//temporarli","//up","//use","//we","0","1","1)","1);","1,col);","1,y)","2","3","4","5","6","=","==",">\");",">(","@overrid","again)","algorithm","alreadi","args)","avoid","back","bottom","boundari","cell","cells:","char[][]","class","col){","col;","col_len","corner","corner)","current","cycles)","direct","directions:","down","empti","exit","exit!\");","exit.","exit.\");","explor","final","finalcol){","finalrow,int","find","findexit(0,0);","findexit(int","findexit(row","findexit(row+1,col);","findexit(row,col","findexit(row,col+1);","findexit(x,y)","for(tupl","found","free","given","if(","if(lab[row][col]","import","int","java.util.linkedlist;","java.util.list;","lab","lab.length;","lab[0].length;","lab[row][col]","labyrinth","last","left","left,","linkedlist<>();","list","m","main(string[]","mark","matrix","move","n","neighbor","new","other","otherwise:","out","packag","pair","passabl","passable,","passable,'","path","path){","path.add(new","path.remove(path.size()","posit","possiabl","print","printpath(int","printpath(row,col);","privat","public","recurs","recursion;","repres","return","return;","right","right,","row,int","row;","row_len","size","start","static","store","string","suppos","system.out.print(t+\"","system.out.printf(\"(","system.out.println(\"found","t:","this.col","this.row","top","tostring()","tuple(int","tuple(row,col));","tuple{","up,","visit","visited,","void","want","x","{","{'","{'*',","||","}","};","在做标记的时候，直接在迷宫上标记了","找到并打印所有路径"],"Chapter2/":["#todo:","(1,","(2,","(unlik","(with","+","0","1","1)","2)","=","algorithm","arr[index]","array","call","combin","combinations,","consid","continu","for循环+递归","for循环的start也就是从集合中取的数据范围缩小","gener","generate_variations(arr,size_of_set,index+1,i+1)","index","index+1,i+1","introduct","iter","k)","keep","longer","matter","mean","n","number","obtain","on","onc","order","posit","put","range(start,size_of_set+1):","recurs","repetit","repetition)!","repetition差不多，只需要在递归传递集合范围的时候处理下即可","rest","same","start","them,","track","us","v(n,","valid.","var(index","var(index)","varat","variat","variations).","variations:","without","…","使用递归的方法","例子","允许重复","元素不重复无序组合","元素不重复有序组合","元素不重复有序组合中的排列解法","元素重复无序组合","元素重复有序组合","数字递增形式的组合","第二章","第五节","第四节","组合及排列(combinatorial)","组合需要注意的是，元素是否能重复取，取出的元素之间顺序是否考虑","考虑顺序但是不重复，这就可以成为一个排列问题permut"],"Chapter2/简单组合.html":["#","#todo:","'''","'))","'__main__':","1]","2","2]","3","3,2","3]","=","==",">=","[1,","[2,","[3,","[none]*k","__name__","arr","arr[index]","before.","bottom","continu","current","def","element","else:","fill","gener","generate_variations(arr,0)","generate_variations(arr,index):","generate_variations(arr,index+1)","generate_variations(arr,n,0)","generate_variations(arr,size_of_set,index):","generate_variations(arr,size_of_set,index+1)","hardcod","index","index+1","input","k","len(arr):","map(int,input().split('","n,k","outsid","print(arr)","rang","range(1,n+1):","range(1,size_of_set+1):","reach","recurs","remov","result","simplifi","start","such","that'","things,","us","valid","valu","varat","we'v","we’ll","从大集合中取元素","允许取重复元素","元素重复有序组合","第一节","脑海中要有图像","顺序有影响，如（1,2）与（2,1）是不同的"],"Chapter2/元素只取一次组合.html":["#","#todo:","'''","'))","'__main__':","1]","2","2]","3","3]","=","==",">=","[1,","[2,","[3,","[_","[false]*(n+1)","[none]*k","_","__name__","arr","arr[i],arr[j]","arr[index]","arr[j],arr[i]","bottom","continu","current","def","element","else:","fals","fill","free","free[i]","gener","generate_variations(arr,free,0,0)","generate_variations(arr,free,index+1,index+1)","generate_variations(arr,free,index,start):","generate_variations(arr,used,n,0)","generate_variations(arr,used,size_of_set,index):","generate_variations(arr,used,size_of_set,index+1)","index","index+1","input","k","keep","len(arr):","map(int,input().split('","mark","n,k","number","outsid","print(arr)","rang","range(1,n+1)]","range(1,size_of_set+1):","range(start,len(free)):","reach","recurs","result","start","such","swap(arr,i,j):","swap(free,index,i)","tack","that'","todo","true","unmark","us","used[i]","used[i]:","valid","varat","we'v","交换元素，每次递归的时候传递的是index数据的列表","从大集合中取元素","优化","使用一个额外的used数据进行标记","元素不能重复，(1,1)就不行","元素不重复有序组合","第二节","顺序有影响（1,2）与(2,1)不一样"],"Chapter2/元素可重复但顺序无影响.html":["#","#todo:","'''","'))","'__main__':","1]","2","2]","3","3]","=","==",">=","[1,","[2,","[3,","[none]*k","__name__","arr","arr[index]","bottom","continu","current","def","element","else:","fill","gener","generate_variations(arr,n,0,1)","generate_variations(arr,size_of_set,index+1,i)","generate_variations(arr,size_of_set,index,start):","index","index+1","input","k","len(arr):","map(int,input().split('","n,k","outsid","print(arr)","rang","range(start,size_of_set+1):","reach","recurs","result","start","such","that'","valid","varat","we'v","从大集合中取元素,考虑到该组合要求顺序没有影响(1,2)与（2,1）是相同的，所以for循环以start参数开始","元素重复无序组合","由于不考虑顺序，该组合(1,2)(2,1)是一样的，所以只生成一个(1,2)就行了，将每次选取过的在下次选值时去掉，也就是for的start,每次递归时是后面的集合元素","第三节","该start，是arr前一个元素的后一个元素，即递归时传递的i"],"Chapter2/元素不可重复并且顺序无影响.html":["#","#todo:","'''","'))","'__main__':","2","2,","3","3,","3]","4,","4]","5","5]","=","==",">=","[1,","[2,","[3,","[none]*k","__name__","arr","arr[index]","bottom","continu","current","def","element","else:","fill","gener","generate_variations(arr,n,0,1)","generate_variations(arr,size_of_set,index+1,i+1)","generate_variations(arr,size_of_set,index,start):","index","index+1","input","k","len(arr):","map(int,input().split('","n,k","outsid","print(arr)","rang","range(start,size_of_set+1):","reach","recurs","result","start","such","that'","valid","varat","we'v","从大集合中取元素,考虑到该组合要求顺序没有影响(1,2)与（2,1）是相同的，所以for循环以start参数开始","元素不重复无序组合","第四节","该start，是arr前一个元素的后一个元素，即递归时传递的i"],"Chapter2/遍历生成数字组合.html":["#","1","1:","2,4","=","==","[0]*k","arr","arr[index]","deal","find","index","index>=0","k","n","n,k","print","print(*arr,sep=\"\")","result","true:","数字递增形式的组合","第五节"],"Chapter2/排列问题.html":["\"__main__\":","#","'''","'a',","'a']","'b',","'b']","'c',","'c']","'o',","'o']","1):","1,","1,start","1]","2,","2]","3","3,","3]","=","==",">=","[\"a\",\"o\",\"b\",\"a\"]","[\"a\",\"o\",\"b\",\"c\"]","['a',","['b',","['c',","['o',","[1,","[2,","[3,","[i","__name__","arr","arr[i],arr[j]","arr[j],arr[i]","arr[left],arr[right]","arr[right],arr[left]","def","else:","fruit","index","int(input())","left","len(free):","n","perm(arr,0,0)","perm(arr,index,start):","perm(arr,left+1,left+1)","perm(free,index):","perm(free,index+1)","perm(fruits,0)","print(arr)","print(free)","range(1,n+1)]","range(index+1,len(free)):","range(left+1,len(arr)):","range(len(arr)","right","swap(arr,i,j):","swap(arr,left,right)","swap(arr,left,right):","swap(free,index,i)","元素无重复排列问题","排列不带重复元素","方法二","第六节","需要回溯回来"],"Chapter2/有元素重复排序问题.html":["!=","#","'''","'__main__':","'a',","'a']","'o',","'o']","1)","1):","1,","1,start","=","==","[\"a\",\"o\",\"a\",\"a\"]","['a',","['o',","__name__","arr","arr.sort()","arr=[\"a\",\"o\",\"b\",\"a\"]","arr[end]","arr[i+1]","arr[i]","arr[i],arr[j]","arr[j],arr[i]","arr[left]","arr[right]:","def","firstel","left","permuterep(arr,0,len(arr)","permuterep(arr,left+1,end)","permuterep(arr,start,end):","print(arr)","range(end","range(left+1,end+1,1):","range(left,end):","right","swap(arr,j,i):","swap(arr,left,right)","它的算法思想并不是交换元素，而是交换在那个位置的元素,第六节是交换元素，这在有重复元素的时候行不同。","恢复，准备下一次新元素的处理","排序的目的是为了将同种类型的聚在一起，以防在交换位置上的元素时出现重复","有元素重复排列问题","第七节","让右边所有的元素都出于这个left位置，然后在恢复，向前处理一个元素","这与第六节交换的元素思想完全不同，一个是交换元素能够原原本本的马上交换回来，一个是等到右边的元素都与该位置交换完才恢复，进而left向左继续处理元素。"],"Chapter3/":["==","algorithm","collect","compar","element","equal","equal,","find","item","linear","maintain","order","preserv","properti","rearrang","rel","search","searching)","sort","specifi","stabl","two","unpredict","unstabl","排序及搜索(sort","排序的稳定性判定","搜索","第三章","算法比较"],"Chapter3/选择排序.html":["\",arr)","\"__main__\":","#","'''","1):","1,","1]","2,","3,","4,","5,","6,","7,","8,","9,","9]","=","==",">","[0,","[i","__name__","arr","arr[i],arr[minindex]","arr[j]:","arr[left,n","arr[minindex]","arr[minindex],arr[i]","averag","before:","best,","case:","def","element","etc.","find","finished:","first","import","j","memory:","min","minindex","o(1)","o(n2)","print(\"before:","print(\"finished:","random","random.shuffle(arr)","rang","range(10)]","range(i+1,len(arr)):","range(len(arr)","right,","second,","select","select_sort(arr)","select_sort(arr):","sort","swap","unsort","worst","为什么选择排序不稳定","可视化排序","第一节","选择排序"],"Chapter3/冒泡排序.html":["\",arr)","\"__main__\":","#","&","1","1):","=","==",">","[i","__name__","arr","arr[i+1],arr[i]","arr[i],arr[i+1]","arr[i]>arr[i+1]:","average:","best","bubble_sort(arr)","bubble_sort(arr):","case:","chang","def","element","exchang","fals","import","indexoflastunsortedel","leftel","len(arr)","memory:","method:","neighbor","o(1)","o(n);","o(n2)","order","print(\"before:","print(\"finished:","random","random.shuffle(arr)","range(10)]","range(unsorted_length","rightel","rightelement)","sort","sorted:","stable:","swap","swap(leftelement,","true","unsort","unsorted_length","until","updat","worst","ye","冒泡排序","可视化","第二节"],"Chapter3/插入排序.html":["#","&","0","=",">",">=0","arr[first_unsorted_index]","average:","best","case:","def","element","first","first_ubsort","first_unsorted_index","first_unsorted_index>0","import","insert","insertion_sort(arr):","left","memory:","method:","move","note","o(1)","o(n);","o(n2)","place","random","range(len(arr)):","sort","stable:","unsort","worst","ye","从未排序的元素中拿出一个插入到已经排好的排序中","插入排序","第三节"],"Chapter3/快速排序.html":["#","&","(for","(visualize)","1","1前进，直到right减到lo时，此时的arr[right]","1就是分割点","1的位置就是pivot的位置","1的元素，","=","algorithm","algorithm课程","arr[i]","arr[lo]","averag","best","case:","choos","def","effici","element","hi","hoar","import","larger","left","lo","lo+1","lomuto","memory:","move","o(log(n))","o(n*log(n));","o(n2)","partion","partion(arr,lo,hi):","partit","pivot","pivot:","pivot;","pivot时，right","quick","quick_sort(arr,lo,hi):","quicksort","random","range(store,hi+1):","recursion)","right","right;","smaller","sort","space","stack","store","worst:","–","两头并进找分割点","交换最左边0与store","从左到右找分割点","从左到右进行遍历，直到结束","则store","初始化","如果right例子","定义store索引来存储即将下一个比pivot小的数","定位到pivot应该出于的位置，此时是store(表示存储下一个比pivot小的数)应该减1，stor","当arr[left]","循环：","快速快速的完整跟踪","快速排序","最坏情况的样子","枢纽点","第四节","选择pivot,放在最左边"],"Chapter3/归并排序.html":["#","(recurs","(typic","(visualize)","/","0,0,0","1:","2","=","==","[none]*(len(leftlist)+len(rightlist))","algorithm","areadi","arr","arr[:middle]","arr[middle:]","averag","best,","call","case:","core","def","divid","each","effici","highli","import","left_arr","leftindex","leftindex,rightindex,mergedindex","len(arr)","len(arr)//2","list","lists)","machin","memory:","merg","merge(left_arr,right_arr)","merge(leftlist,rightlist):","merge_sort(arr):","merge_sort(left_arr)","merge_sort(right_arr)","mergelist","middl","multipl","o(1)","o(log(n))","o(n)","o(n*log(n))","paralleliz","place","random","return","right_arr","singl","sort","sort)","sub","typic","up","worst","一个是merge_sort不断的分解，一个merge在回溯的过程中不断合并","两个方法：","在回溯的过程中又不断的合并","将数组不断分成两份，直到只剩一个元素","归并排序","新建一个新的list用于存储合并的结果","比较两个列表添加","第五节","返回排序号的数组",""],"Chapter3/二分法搜索.html":["#","1","1)","=","arr","arr[mid]","binarysearch(arr,key,start,end):","binarysearch(arr,key,start,mid","def","elif","end","endkey:","end不能小于start","find","index","key","key:","key_not_found","list","mid","return","二分搜索","第六节","迭代实现","递归方法，传递边界","针对的是已经排序好的数据"],"Chapter3/插补法搜索.html":["!=","\"))","%","%d","%d\"","'''","'__main__':","(key,result,arr[result]))","0","1","100,","12,","1:","2,","23,","3,","342]","43,","45,","5","5,","=","==","[0,","__name__","arr","arr[%d]","arr[3]","def","else:","found\")","high","input","int(input(\"pleas","interpolation_search(arr,key)","interpolation_search(sortedarr,key):","key","key:","key_not_found","len(sortedarr)","low","mid","number:","pleas","print(\"not","print(\"th","result","return","参考：插补法查找(interpolationsearch)","插补法搜索","插补法查找是以数据分布的近似直线来作比例运算，以求出中间的索引并进行数据比对，如果取出的值小于要寻找的值，则提高下界，如果取出的值大于要寻找的值，则降低下界，如此不断的减少搜寻的范围，所以其本原则与二分法查找是相同的，至于中间值的寻找是透过比例运算，如下所示，其中k是指定要寻找的对象，而m则是可能的索引值","方法","是二分法的提高","用插补法的思想来找mid，而不是只是除以2","第七节"],"Chapter3/洗牌算法.html":["\",arr)","#","'''","'__main__':","0,","1)","1,","1]","2,","3,","4,","5,","6,","7,","8,","9]","=","==","[0,","[2,","[_","_","__name__","algorithm","arr","arr[i],arr[random_index]","arr[random_index],arr[i]","array[i","array[i]","before:","collect","def","element","exchang","fisher–y","import","item","my_shuffle(arr)","my_shuffle(arr):","n","order","print(\"aft","print(\"before:","random","random.randint(0,len(arr)","random_index","range(0,len(arr)):","range(10)]","return","shuffl","…","洗牌算法","第八节"],"Chapter4/":["programming)","动态规划(dynam","第四章","要求的结果已经通过计算存储在table中了，该结果只是table中的某一项","需要一个table（一般是一个数组数据结构）来记录值"],"Chapter4/LIS-Algorithm.html":["!=","\",len(longestseq))","#","#or","#todo","#todo:","'''","'__main__':","+=","0","1","11]","1:","5,","6","7,","8,","9,","=","==","[3,","[3,14,5,12,15,7,8,9,11,10,1]","[]","[none]*len(sequence)","__name__","bottom","calculation通过自底向上，将数据准备好","check","current","current_index","def","element","findlongestincreasingsubsequence(sequence)","findlongestincreasingsubsequence(sequence):","hold","increas","index","is:","j","keep","larger","last","lastindex","len_seq","len_seq[i]","len_seq[i]>maxlen:","length","li","lis.insert(0,sequence[current_index])","longest","longestseq","mark","max","maxlen","new","predecessor","prev","prev[]","prev[current_index]","prev[i]","prev[x]","previou","print(\"max","print(longestseq)","range(i):","range(len(sequence)):","recov","return","same","seq[x]","sequenc","sequence[j]len_seq[i]:","smaller","through","up","walk","寻找串中最长的子串","找最长子串","第一节"],"Chapter4/Right-Down.html":["!=","&&","){","+","+=","//bottom","//default","//find","//print","0","0,","1,","1;","1])","1];","1]>maxprev){","1][col]","1][col];","1][cur_col]","2,","2},","3,","4,","5,","6,","6},","7,","7},","8,","8}","8},","9,","9},","=","==",">","a){","args){","boolean[][]","boolean[rows][cols];","bottom","cell","cell[row,","cells.length;","cells[0].length;","cells[cur_row][cur_col];","cells[row][col];","class","col","col]","col],","corner","cur_col","cur_col>=0","cur_row","down","dynam","each","end","fals","find","for(int","given","go","i=0;i","if(cur_row>0","if(maxprev","if(row","int","int[][]","int[rows][cols];","integer.min_value){","largest","left","main(string[]","main{","matrix","max","max(sum[row","maxprev","maxprev){","maxprev;","new","number","path","path[cur_row][cur_col]","program","public","right","row","row=0;row","solution:","start","static","step","sum","sum[row,","sum_matrix","sum_matrix[cur_row","sum_matrix[cur_row][cur_col]","sum_matrix[row","sum_matrix[row][col","sum_matrix[row][col]","sum_valu","top","true;","up","up准备数据","valu","void","while(cur_row>=0","{","{0,","{1,","{2,","{3,","{4,","{9,","}","};","}else{","第二节","计算最大和"]},"length":27},"tokenStore":{"root":{"0":{"0":{"0":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}},"1":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}},"docs":{}},"1":{"0":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}},"1":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}},"docs":{}},"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.03339517625231911},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.01680672268907563},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}},":":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}},")":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}},";":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}},",":{"0":{"docs":{},",":{"0":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}},"docs":{}}},"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"1":{"0":{"0":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}},",":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}},"1":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}},"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}},"1":{"0":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}},"1":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}},"docs":{},"]":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}},"2":{"docs":{},",":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}},"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":5},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.01855287569573284},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.06666666666666667},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.024390243902439025},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745},"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.06451612903225806},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.03896103896103896},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.025210084033613446}},")":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter2/":{"ref":"Chapter2/","tf":0.019801980198019802},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176},"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}},";":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0273972602739726},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678}}},":":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}},",":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.016666666666666666},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.02857142857142857},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.03827751196172249}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"y":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}},"]":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.022222222222222223},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0223463687150838},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}},";":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}},">":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},")":{"docs":{},"{":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}}},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},";":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}},")":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},":":{"docs":{"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}},"前":{"docs":{},"进":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"减":{"docs":{},"到":{"docs":{},"l":{"docs":{},"o":{"docs":{},"时":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"分":{"docs":{},"割":{"docs":{},"点":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"就":{"docs":{},"是":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}},";":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.019138755980861243}}}},"2":{"3":{"docs":{},",":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}},"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":5},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.04081632653061224},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.01675977653631285},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0273972602739726},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}},"/":{"2":{"8":{"docs":{},"/":{"1":{"9":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},")":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}},"]":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.022222222222222223},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0223463687150838},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0273972602739726},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112}}},",":{"4":{"docs":{"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333}}},"docs":{"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.03333333333333333},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.023923444976076555}}},"}":{"docs":{},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}}}}},"3":{"4":{"2":{"docs":{},"]":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}},"docs":{}},"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":5},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.011131725417439703},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.01675977653631285},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0273972602739726},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.022222222222222223},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}},",":{"2":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}},"docs":{"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.044444444444444446},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.02857142857142857},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.014354066985645933}}},"]":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.022222222222222223},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0223463687150838},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0410958904109589},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112}}}},"4":{"3":{"docs":{},",":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}},"5":{"docs":{},",":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}},"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.08333333333333333},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":5},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.027829313543599257}},",":{"docs":{"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.03333333333333333},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.02857142857142857},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.014354066985645933}}},"]":{"docs":{"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.03333333333333333}}}},"5":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.08333333333333333},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":5.00556586270872},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.03896103896103896}},",":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.024691358024691357},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.02857142857142857},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.019138755980861243}}},"]":{"docs":{"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.06666666666666667}}}},"6":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.08333333333333333},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.016697588126159554},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}},")":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}},",":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.030864197530864196},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.02857142857142857},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.014354066985645933}}},"}":{"docs":{},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}},"7":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.08333333333333333}},")":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.018518518518518517}}},",":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.024691358024691357},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.02857142857142857},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.023923444976076555}}},"}":{"docs":{},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}},"8":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.08333333333333333}},")":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.037037037037037035}}},"}":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"组":{"docs":{},"合":{"docs":{},",":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888}}}}}}}}}}},";":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}},",":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.02857142857142857},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.028708133971291867}}}},"9":{"docs":{},",":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.014354066985645933}}},"]":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.02857142857142857}}},"}":{"docs":{},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}}}}},"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.1111111111111111},"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter2/":{"ref":"Chapter2/","tf":0.0297029702970297},"Chapter3/":{"ref":"Chapter3/","tf":0.10810810810810811},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}},"课":{"docs":{},"程":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.043209876543209874}},"结":{"docs":{},"合":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},"{":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}},"r":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464},"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306},"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.04285714285714286}},"[":{"3":{"docs":{},"]":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}},"docs":{},"]":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333}},"+":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}}},"]":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}}}}}}}}}}},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}},"docs":{}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}},">":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},":":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}},"docs":{}}}}}}}}},"+":{"1":{"docs":{},"]":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}}}}}}}},"docs":{}}},"n":{"docs":{},"]":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}}},"j":{"docs":{},"]":{"docs":{},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}}},":":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.029411764705882353}},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}}}}}}}}}}},",":{"docs":{},"n":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}}}}}}},"o":{"docs":{},"]":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}}}}}}}}},":":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},"]":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}},"]":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.06451612903225806}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"]":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}},"%":{"docs":{},"d":{"docs":{},"]":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}}},"a":{"docs":{},"y":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}},".":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}},"[":{"docs":{},"i":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}},"]":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}}},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}}},"=":{"docs":{},"[":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"]":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.023529411764705882}},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}},"e":{"docs":{},":":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}}}}}}}}},")":{"docs":{},"{":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.1111111111111111}}}}}}}},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.018518518518518517},"Chapter2/":{"ref":"Chapter2/","tf":0.04950495049504951}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.012345679012345678}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}},"a":{"docs":{},"r":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}}}},"l":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.014354066985645933}},"=":{"0":{"docs":{},";":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}},"docs":{}},")":{"docs":{},"{":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678}}}},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}},"]":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"e":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.024691358024691357},"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"通":{"docs":{},"过":{"docs":{},"自":{"docs":{},"底":{"docs":{},"向":{"docs":{},"上":{"docs":{},"，":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"准":{"docs":{},"备":{"docs":{},"好":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},":":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.01680672268907563}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.025210084033613446}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}},">":{"docs":{},"=":{"0":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}},"docs":{}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}},"s":{"docs":{},"s":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.023529411764705882}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}},"s":{"docs":{},":":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}}},"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{},";":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{},";":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}}}}},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0273972602739726},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.023529411764705882},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0074211502782931356},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.023923444976076555}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10.11111111111111},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}}}},"[":{"docs":{},"]":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}},"{":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},"}":{"docs":{},";":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"[":{"docs":{},"]":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}}}}},",":{"docs":{},"]":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"]":{"docs":{},";":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}},"\"":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},"{":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.02962962962962963},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0223463687150838},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0273972602739726},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.022222222222222223},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.13333333333333333},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.01680672268907563}},")":{"docs":{},"{":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}},"+":{"1":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}},",":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}},"docs":{}}}}},"docs":{}},">":{"docs":{},"=":{"0":{"docs":{"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333}}},"docs":{}}},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.025974025974025976}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.05405405405405406}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}},"e":{"docs":{},"r":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}},"m":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.08108108108108109},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}},".":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}},"f":{"docs":{},"(":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},">":{"0":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}},"docs":{}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}},";":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}}},"s":{"docs":{},":":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.01680672268907563}}}},"=":{"0":{"docs":{},";":{"docs":{},"i":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}},"docs":{}}},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"设":{"docs":{},"计":{"docs":{},"模":{"docs":{},"式":{"docs":{},"基":{"docs":{},"础":{"docs":{"./":{"ref":"./","tf":0.1111111111111111}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{},"h":{"docs":{},"i":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}}}}}}}}},"t":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"i":{"docs":{},"r":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},"e":{"docs":{},",":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514}},"'":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.014842300556586271},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.014354066985645933}},")":{"docs":{},"{":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.012345679012345678}}}}}}},"m":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},")":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}},"docs":{}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}},"+":{"1":{"docs":{},")":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112}}}},"docs":{}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"0":{"docs":{},")":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}},"docs":{}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}}}}}},"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}},"docs":{}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.018518518518518517}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.024691358024691357}}},"i":{"docs":{},"t":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.047058823529411764},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}},"r":{"docs":{},"e":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.024691358024691357}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}},"v":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}},"[":{"docs":{},"]":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}}}}}}}},"i":{"docs":{},"]":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.01680672268907563}}}},"x":{"docs":{},"]":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333}},"(":{"docs":{},"\"":{"docs":{},"#":{"docs":{},"\"":{"docs":{},"*":{"docs":{},"n":{"docs":{},")":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}},"*":{"docs":{},"\"":{"docs":{},"*":{"docs":{},"n":{"docs":{},")":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}},"(":{"docs":{},"\"":{"docs":{},",":{"docs":{},"*":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{},"\"":{"docs":{},")":{"docs":{},"\"":{"docs":{},")":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}},"t":{"docs":{},"h":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}},"*":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{},"s":{"docs":{},"e":{"docs":{},"p":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"5":{"docs":{},")":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}},"docs":{},"n":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}},")":{"docs":{},":":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678}}}}}},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"Chapter4/":{"ref":"Chapter4/","tf":3.333333333333333}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0410958904109589},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}}}}}},"t":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}}},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}},":":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}},";":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}},"时":{"docs":{},"，":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.1111111111111111}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.012345679012345678},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}},":":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.018518518518518517},"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.05405405405405406}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":3.333333333333333}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}}}}}}},"q":{"docs":{},"[":{"docs":{},"x":{"docs":{},"]":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.01680672268907563}},"e":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},":":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}},":":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"中":{"docs":{},"给":{"docs":{},"了":{"docs":{},"很":{"docs":{},"详":{"docs":{},"细":{"docs":{},"的":{"docs":{},"解":{"docs":{},"答":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.05405405405405406},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.04878048780487805},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.029411764705882353},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.05102040816326531}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}},")":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0273972602739726},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.08235294117647059},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.014842300556586271},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}},"r":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"b":{"docs":{},"l":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}},"e":{"docs":{},":":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}}}}}}},"e":{"docs":{},"p":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.012345679012345678},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"o":{"docs":{},"p":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}},"r":{"docs":{},"e":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.023529411764705882}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"u":{"docs":{},"b":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.04081632653061224}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}},"m":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}},"]":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"c":{"docs":{},"h":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}}}}},"\"":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"+":{"docs":{},"\"":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"f":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"(":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},")":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.04878048780487805}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}},":":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}}}}}}}}}}},"j":{"docs":{},",":{"docs":{},"i":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{},"i":{"docs":{},")":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.02857142857142857}}}}}}}},"七":{"docs":{},"大":{"docs":{},"基":{"docs":{},"本":{"docs":{},"原":{"docs":{},"则":{"docs":{"./":{"ref":"./","tf":0.1111111111111111}}}}}}}},"算":{"docs":{},"法":{"docs":{},"可":{"docs":{},"视":{"docs":{},"化":{"docs":{"./":{"ref":"./","tf":0.1111111111111111}}}}},"比":{"docs":{},"较":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}}}},"课":{"docs":{},"程":{"docs":{},"学":{"docs":{},"习":{"docs":{"./":{"ref":"./","tf":0.1111111111111111}}}}}},"辅":{"docs":{},"助":{"docs":{},"工":{"docs":{},"具":{"docs":{"./":{"ref":"./","tf":0.1111111111111111}}}}}},"#":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.012345679012345678},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.06666666666666667},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.07262569832402235},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0821917808219178},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.06666666666666667},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.1},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.058823529411764705},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.024390243902439025},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.04081632653061224},"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.025210084033613446}},"#":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}},"#":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}},"#":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}},"#":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}},"因":{"docs":{},"为":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"剔":{"docs":{},"除":{"docs":{},"已":{"docs":{},"经":{"docs":{},"选":{"docs":{},"过":{"docs":{},"的":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"+":{"1":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}},":":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}},"o":{"docs":{},"r":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}},"'":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.04267161410018553}},"'":{"docs":{},"'":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.012345679012345678},"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.07692307692307693},"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.027777777777777776},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0223463687150838},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0273972602739726},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.022222222222222223},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.022222222222222223},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.029411764705882353},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.025974025974025976},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.02857142857142857},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.01680672268907563}}}},")":{"docs":{},"{":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}},")":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}},"*":{"docs":{},"'":{"docs":{},",":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.016697588126159554}}}}},",":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.03710575139146568}}},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}},"e":{"docs":{},"'":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},")":{"docs":{},"{":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}},"}":{"docs":{},",":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"v":{"docs":{},"'":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}},"}":{"docs":{},",":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0074211502782931356}}}},"_":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"_":{"docs":{},"'":{"docs":{},":":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}}}},"a":{"docs":{},"'":{"docs":{},",":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.06666666666666667},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.08823529411764706}}},"]":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.03333333333333333},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.04411764705882353}}}}},"b":{"docs":{},"'":{"docs":{},",":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.06666666666666667}}},"]":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.03333333333333333}}}}},"c":{"docs":{},"'":{"docs":{},",":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.06666666666666667}}},"]":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.03333333333333333}}}}},"o":{"docs":{},"'":{"docs":{},",":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.06666666666666667},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.029411764705882353}}},"]":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.03333333333333333},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}},"(":{"1":{"docs":{},",":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}},"2":{"docs":{},",":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}},"4":{"docs":{},",":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.037037037037037035}}}},"5":{"docs":{},",":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.018518518518518517}}}},"6":{"docs":{},",":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}},"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.1388888888888889},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},")":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}},"l":{"docs":{},">":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}}},"*":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"=":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}},"t":{"docs":{},"o":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}},"y":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}},"x":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},"+":{"1":{"docs":{},",":{"docs":{},"y":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"docs":{}},",":{"docs":{},"i":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}},"y":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.00927643784786642}}},"+":{"1":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}},"docs":{}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{},")":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},"*":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}},"*":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}},"*":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}},"*":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}},"/":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}},"+":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.024691358024691357},"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},"=":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"=":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0273972602739726},"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.07692307692307693},"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.027777777777777776},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.07058823529411765},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.014842300556586271},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.044444444444444446},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.061452513966480445},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0410958904109589},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.03333333333333333},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.13333333333333333},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.03333333333333333},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.07352941176470588},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.04878048780487805},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.12195121951219512},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.058823529411764705},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.07142857142857142},"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.06451612903225806},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.11688311688311688},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.05714285714285714},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.11764705882352941},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.07177033492822966}},"=":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176},"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.02857142857142857},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.012345679012345678},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}}}},"s":{"docs":{},"e":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},"m":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"[":{"1":{"5":{"docs":{},"]":{"docs":{},";":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.023529411764705882}}}}},"docs":{}},"8":{"docs":{},"]":{"docs":{},";":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}},"docs":{},"]":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.03529411764705882}},"[":{"docs":{},"]":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"]":{"docs":{},"[":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"]":{"docs":{},";":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"]":{"docs":{},";":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}},":":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}}},"s":{"docs":{},"t":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549}},",":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}},"u":{"docs":{},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}},":":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.06451612903225806}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464},"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.01675977653631285},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.022222222222222223},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.029411764705882353},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.029411764705882353},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.02040816326530612},"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.06451612903225806},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}},"a":{"docs":{},"l":{"docs":{"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.012345679012345678}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514}},"l":{"docs":{},"i":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.023529411764705882}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.012345679012345678},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.012345679012345678},"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0410958904109589},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter3/":{"ref":"Chapter3/","tf":0.05405405405405406},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.036585365853658534},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.025210084033613446}},"s":{"docs":{},"。":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}}}},"s":{"docs":{},"e":{"docs":{},":":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.025974025974025976}}}}},"i":{"docs":{},"f":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.06451612903225806}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}}},"i":{"docs":{},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0074211502782931356}},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},".":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.05405405405405406}},",":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}}}}},"t":{"docs":{},"c":{"docs":{},".":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}},"n":{"docs":{},"d":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.06451612903225806},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},":":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903}}}}}},"不":{"docs":{},"能":{"docs":{},"小":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.06666666666666667},"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}},")":{"docs":{},".":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}},"docs":{}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},"+":{"1":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}},"docs":{}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},"+":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}},"docs":{}}}}}}}}},"x":{"docs":{},",":{"docs":{},"y":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}},":":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{},"{":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}}}}}}}}},"l":{"docs":{},"l":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.02962962962962963},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0223463687150838},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0273972602739726},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.022222222222222223}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}},"e":{"docs":{},"l":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.029411764705882353}}}},"_":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}}}}}}},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}},">":{"0":{"docs":{"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}}},"docs":{}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"–":{"docs":{},"y":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"循":{"docs":{},"环":{"docs":{},"+":{"docs":{},"递":{"docs":{},"归":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"从":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"取":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"范":{"docs":{},"围":{"docs":{},"缩":{"docs":{},"小":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.011131725417439703}},"\"":{"docs":{},")":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}}}}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.036585365853658534},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"0":{"1":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"0":{"docs":{},")":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}}},"docs":{},"n":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}}},"+":{"1":{"docs":{},")":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}}},"docs":{}}}}}}}}},"docs":{}},"docs":{},"e":{"docs":{},"r":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter2/":{"ref":"Chapter2/","tf":0.07920792079207921},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"0":{"docs":{},")":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}}},"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}},"docs":{}},")":{"docs":{"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863}}}}},")":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}}},"docs":{}},")":{"docs":{},":":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}}},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}}},"+":{"1":{"docs":{},")":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}}},"docs":{}}}}}}},"n":{"docs":{},",":{"0":{"docs":{},")":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}},",":{"1":{"docs":{},")":{"docs":{"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}},"docs":{}}},"docs":{}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},")":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}},"docs":{}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}},"docs":{}}}}}}}}},"docs":{}},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{},"n":{"docs":{},",":{"0":{"docs":{},")":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}},"docs":{}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}},"+":{"1":{"docs":{},")":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"0":{"docs":{},",":{"4":{"docs":{},",":{"8":{"docs":{},")":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888}}}},"docs":{}}},"docs":{}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888}}}}}}}}}}},"docs":{}}}}},"docs":{}},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}},"o":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"k":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.02962962962962963},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0223463687150838},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0273972602739726},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.022222222222222223},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}},"y":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}},":":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.03896103896103896}}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.025974025974025976}}}}}}}}}}}}}},")":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}},"s":{"docs":{},"t":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}},"b":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}},"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514}}}}}}}}}}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678}}}}}}}}},"s":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.025210084033613446}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}},":":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464},"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}},"/":{"docs":{},"/":{"2":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}},"docs":{}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.025210084033613446}},">":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},":":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.03361344537815126}}}}}},"f":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.029411764705882353},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},",":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}},"e":{"docs":{},"l":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.02040816326530612}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}},",":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.04201680672268908}},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}}}},"s":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.061224489795918366},"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903}},"s":{"docs":{},")":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"o":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}},"s":{"docs":{},"t":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}},"+":{"1":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549}}},"docs":{}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549}}}}}},"w":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}},"m":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.023529411764705882},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}}}},"{":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}},"n":{"docs":{},"i":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}},"r":{"docs":{},"k":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}},"x":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.01680672268907563}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}},")":{"docs":{},"{":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},";":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},":":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}},":":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}}}}}}},"a":{"docs":{},"n":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}},"r":{"docs":{},"g":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.04081632653061224}},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}},"v":{"docs":{},"e":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}},"i":{"docs":{},"n":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025}}}}}}}},"d":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.025974025974025976}},"d":{"docs":{},"l":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}},":":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}},"n":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.012345679012345678},"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}},"o":{"docs":{},"n":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}},"t":{"docs":{},"e":{"docs":{"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}},":":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}},"e":{"docs":{},"w":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.058823529411764705},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}}},"x":{"docs":{},"t":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.019801980198019802},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},":":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.025974025974025976}}}}}}}},",":{"docs":{},"k":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333}}}}},"o":{"docs":{},"n":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}},":":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}},"c":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},":":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}}}}},"b":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter3/":{"ref":"Chapter3/","tf":0.08108108108108109},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}},"(":{"1":{"docs":{},")":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}},"docs":{},"n":{"2":{"docs":{},")":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549}}}},"docs":{},")":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}},";":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}}}},"*":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}},";":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.043209876543209874},"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0547945205479452},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}}}}}},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}},")":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}},"o":{"docs":{},"v":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter2/":{"ref":"Chapter2/","tf":0.039603960396039604}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"!":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"递":{"docs":{},"归":{"docs":{},"传":{"docs":{},"递":{"docs":{},"集":{"docs":{},"合":{"docs":{},"范":{"docs":{},"围":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"处":{"docs":{},"理":{"docs":{},"下":{"docs":{},"即":{"docs":{},"可":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.012345679012345678},"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0410958904109589},"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464},"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.02040816326530612},"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.025974025974025976},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.025974025974025976}}}}},"t":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}}}},"l":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}}}}}}}}}},"1":{"0":{"docs":{},")":{"docs":{},"]":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}},"docs":{},",":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}},"]":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}},"docs":{}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}}},"docs":{}}}}}}}}}}}}}}},"2":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}}}},"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888}}}}},"docs":{}}}}}}}}}}}},",":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}}},"docs":{}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{},"h":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}},"docs":{}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}}}}}}}}}}}},"docs":{}}}}}},"+":{"1":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}}}}}}}}}}}}}},"docs":{}},")":{"docs":{},":":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"+":{"1":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}},"docs":{}}},"docs":{}}}}}}},"docs":{}},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}}}},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}},")":{"docs":{},":":{"docs":{"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}}}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.04285714285714286}},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}}}}}}}},"docs":{}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}},")":{"docs":{},"{":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678}}}}}},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"=":{"0":{"docs":{},";":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}},"docs":{}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0392156862745098},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}},",":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}}},"e":{"docs":{},"l":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}}}}}}},";":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.02040816326530612}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},",":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}}}}}},"e":{"docs":{},"m":{"docs":{},",":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}},"a":{"docs":{},"t":{"docs":{},"'":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}}}},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}},"c":{"docs":{},"k":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}},"i":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}},"u":{"docs":{},"e":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.024390243902439025}},":":{"docs":{"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333}}},";":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419}},":":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}},"p":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}},":":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}},"{":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}}},"w":{"docs":{},"o":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}},"y":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}},"i":{"docs":{},"d":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}},".":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}},")":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}}}}},"a":{"docs":{},"t":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.039603960396039604}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}},":":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0055658627087198514}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}},"(":{"docs":{},"n":{"docs":{},",":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}},")":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.018518518518518517}}},"s":{"docs":{},":":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}},"n":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}},"l":{"docs":{},"k":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter2/":{"ref":"Chapter2/","tf":0.0297029702970297}}}}}}}},"e":{"docs":{},"'":{"docs":{},"v":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}},"’":{"docs":{},"l":{"docs":{},"l":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}},":":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},">":{"docs":{},"=":{"0":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}},"docs":{}}}}}}}}}}}}}}}},"{":{"0":{"docs":{},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"1":{"docs":{},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"2":{"docs":{},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.014354066985645933}}}},"3":{"docs":{},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"4":{"docs":{},",":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"9":{"docs":{},",":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0273972602739726},"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0074211502782931356},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},"'":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0074211502782931356}},"*":{"docs":{},"'":{"docs":{},",":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"与":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"思":{"docs":{},"想":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"p":{"docs":{},"r":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"章":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":5}}},"节":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":5},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":5},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":5}}}},"二":{"docs":{},"章":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":5}}},"节":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":5},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":5},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":5}}}},"五":{"docs":{},"节":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":5},"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":5}}}},"四":{"docs":{},"节":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":5},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":5}}},"章":{"docs":{"Chapter4/":{"ref":"Chapter4/","tf":3.333333333333333}}}},"三":{"docs":{},"节":{"docs":{"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":5},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":5}}},"章":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":3.333333333333333}}}},"六":{"docs":{},"节":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":5},"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":5}}}},"七":{"docs":{},"节":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":5},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":5}}}},"八":{"docs":{},"节":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":5}}}}},"递":{"docs":{},"归":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"Chapter1/":{"ref":"Chapter1/","tf":5}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"传":{"docs":{},"递":{"docs":{},"边":{"docs":{},"界":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903}}}}}}}}}}},"/":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}},"/":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}},"/":{"docs":{},"/":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.023529411764705882}}}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}},"e":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}},"s":{"docs":{},"e":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}},"*":{"docs":{},"*":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0136986301369863}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.023529411764705882},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}},"a":{"docs":{},"r":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815}}}}}}}},"i":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}},"g":{"docs":{},"h":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.03896103896103896}},"l":{"docs":{},"i":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}},"u":{"docs":{},"s":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0273972602739726},"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0223463687150838}},"e":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419}},":":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}}}}}}},"p":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}},",":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}},"准":{"docs":{},"备":{"docs":{},"数":{"docs":{},"据":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.024390243902439025}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}}}},"}":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0410958904109589},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.02040816326530612},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.03349282296650718}},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"{":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}}}}}},"•":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":0.0273972602739726}}},"数":{"docs":{},"组":{"docs":{},"求":{"docs":{},"和":{"docs":{"Chapter1/Recursive-Array-Sum.html":{"ref":"Chapter1/Recursive-Array-Sum.html","tf":5}}}}},"字":{"docs":{},"递":{"docs":{},"增":{"docs":{},"形":{"docs":{},"式":{"docs":{},"的":{"docs":{},"组":{"docs":{},"合":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":5}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},"*":{"docs":{},"k":{"docs":{"Chapter2/遍历生成数字组合.html":{"ref":"Chapter2/遍历生成数字组合.html","tf":0.03333333333333333}}}}},",":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}},"1":{"docs":{},",":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.022222222222222223},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0223463687150838},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0410958904109589},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.06666666666666667},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112}}}},"2":{"docs":{},",":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.022222222222222223},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0223463687150838},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0273972602739726},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.03333333333333333},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}}},"3":{"docs":{},",":{"1":{"4":{"docs":{},",":{"5":{"docs":{},",":{"1":{"2":{"docs":{},",":{"1":{"5":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},",":{"9":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"0":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.022222222222222223},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0223463687150838},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}},"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"]":{"docs":{},"*":{"3":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464},"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888}}},"docs":{},"k":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},"+":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.01680672268907563}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"]":{"docs":{},"*":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}},"docs":{}}}}}}}}}}},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"]":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}},"c":{"docs":{},"\"":{"docs":{},"]":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}}}}}},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"]":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},",":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.03333333333333333},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.04411764705882353}}}}},"b":{"docs":{},"'":{"docs":{},",":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.03333333333333333}}}}},"c":{"docs":{},"'":{"docs":{},",":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.03333333333333333}}}}},"o":{"docs":{},"'":{"docs":{},",":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.03333333333333333},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}},"i":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}},"]":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}},"生":{"docs":{},"成":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"0":{"1":{"docs":{},"组":{"docs":{},"合":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":5}}}}},"docs":{}},"docs":{}}}}}},"通":{"docs":{},"过":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"依":{"docs":{},"次":{"docs":{},"处":{"docs":{},"理":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"然":{"docs":{},"后":{"docs":{},"递":{"docs":{},"归":{"docs":{"Chapter1/generate01.html":{"ref":"Chapter1/generate01.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.1388888888888889},"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.07606679035250463}},"\"":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},">":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.009569377990430622}},"=":{"0":{"docs":{"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}}},"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}},"(":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.07050092764378478}}}},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"组":{"docs":{},"合":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":5}}}}}}}},"这":{"docs":{},"张":{"docs":{},"图":{"docs":{},"是":{"docs":{},"组":{"docs":{},"合":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"允":{"docs":{},"许":{"docs":{},"重":{"docs":{},"复":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888}}}}}}}}}}}}}}}},"题":{"docs":{},"是":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"4":{"docs":{"Chapter1/combineGenerator.html":{"ref":"Chapter1/combineGenerator.html","tf":0.013888888888888888}}},"docs":{}}}}}}}},"与":{"docs":{},"第":{"docs":{},"六":{"docs":{},"节":{"docs":{},"交":{"docs":{},"换":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"思":{"docs":{},"想":{"docs":{},"完":{"docs":{},"全":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"交":{"docs":{},"换":{"docs":{},"元":{"docs":{},"素":{"docs":{},"能":{"docs":{},"够":{"docs":{},"原":{"docs":{},"原":{"docs":{},"本":{"docs":{},"本":{"docs":{},"的":{"docs":{},"马":{"docs":{},"上":{"docs":{},"交":{"docs":{},"换":{"docs":{},"回":{"docs":{},"来":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"等":{"docs":{},"到":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"与":{"docs":{},"该":{"docs":{},"位":{"docs":{},"置":{"docs":{},"交":{"docs":{},"换":{"docs":{},"完":{"docs":{},"才":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"，":{"docs":{},"进":{"docs":{},"而":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"向":{"docs":{},"左":{"docs":{},"继":{"docs":{},"续":{"docs":{},"处":{"docs":{},"理":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}},"p":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{},"h":{"docs":{},"i":{"docs":{},")":{"docs":{},":":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}}}},"八":{"docs":{},"皇":{"docs":{},"后":{"docs":{},"问":{"docs":{},"题":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":5}}}}}}},"分":{"docs":{},"别":{"docs":{},"用":{"docs":{},"列":{"docs":{},"，":{"docs":{},"左":{"docs":{},"斜":{"docs":{},"线":{"docs":{},"，":{"docs":{},"右":{"docs":{},"斜":{"docs":{},"线":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"在":{"docs":{},"整":{"docs":{},"个":{"docs":{},"棋":{"docs":{},"盘":{"docs":{},"上":{"docs":{},"找":{"docs":{},"冲":{"docs":{},"突":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}},"很":{"docs":{},"巧":{"docs":{},"妙":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},":":{"docs":{"Chapter1/eight-Queen-puzzle.html":{"ref":"Chapter1/eight-Queen-puzzle.html","tf":0.011764705882352941}}}}}}}}},"!":{"docs":{},"=":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815},"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.004784688995215311}}}},"\"":{"docs":{},"(":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}},"+":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"+":{"docs":{},"\"":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"docs":{},"\"":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}},"_":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"_":{"docs":{},"\"":{"docs":{},":":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}}}}}}}}}}}},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.024390243902439025},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.02857142857142857}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{},")":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}},")":{"docs":{},")":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}},"%":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}},"d":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0037105751391465678},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}},"\"":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}},",":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.08534322820037106}}},"@":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}},"j":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.024390243902439025},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.01680672268907563}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}},"x":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}},"|":{"docs":{},"|":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}},"在":{"docs":{},"做":{"docs":{},"标":{"docs":{},"记":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"迷":{"docs":{},"宫":{"docs":{},"上":{"docs":{},"标":{"docs":{},"记":{"docs":{},"了":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}},"回":{"docs":{},"溯":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"又":{"docs":{},"不":{"docs":{},"断":{"docs":{},"的":{"docs":{},"合":{"docs":{},"并":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}}}}}}},"找":{"docs":{},"到":{"docs":{},"并":{"docs":{},"打":{"docs":{},"印":{"docs":{},"所":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{"Chapter1/find-and-print-paths.html":{"ref":"Chapter1/find-and-print-paths.html","tf":5}}}}}}}}}},"最":{"docs":{},"长":{"docs":{},"子":{"docs":{},"串":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":5}}}}}}},"…":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}}},"使":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}}},"一":{"docs":{},"个":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"数":{"docs":{},"据":{"docs":{},"进":{"docs":{},"行":{"docs":{},"标":{"docs":{},"记":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"子":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.04950495049504951}}}},"允":{"docs":{},"许":{"docs":{},"重":{"docs":{},"复":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}},"取":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"无":{"docs":{},"序":{"docs":{},"组":{"docs":{},"合":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":5}}}}}},"有":{"docs":{},"序":{"docs":{},"组":{"docs":{},"合":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":5}},"中":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"解":{"docs":{},"法":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}}}}}}}}}},"能":{"docs":{},"重":{"docs":{},"复":{"docs":{},"，":{"docs":{},"(":{"1":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},"就":{"docs":{},"不":{"docs":{},"行":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}}}}},"docs":{}}},"docs":{}}}}}}},"重":{"docs":{},"复":{"docs":{},"无":{"docs":{},"序":{"docs":{},"组":{"docs":{},"合":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":5}}}}}},"有":{"docs":{},"序":{"docs":{},"组":{"docs":{},"合":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901},"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":5}}}}}}}},"无":{"docs":{},"重":{"docs":{},"复":{"docs":{},"排":{"docs":{},"列":{"docs":{},"问":{"docs":{},"题":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":5}}}}}}}}}}},"组":{"docs":{},"合":{"docs":{},"及":{"docs":{},"排":{"docs":{},"列":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":5}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"否":{"docs":{},"能":{"docs":{},"重":{"docs":{},"复":{"docs":{},"取":{"docs":{},"，":{"docs":{},"取":{"docs":{},"出":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"间":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"是":{"docs":{},"否":{"docs":{},"考":{"docs":{},"虑":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"成":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"列":{"docs":{},"问":{"docs":{},"题":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"Chapter2/":{"ref":"Chapter2/","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419},"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112},"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.011111111111111112},"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176},"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513},"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988},"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":0.014285714285714285},"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}},"从":{"docs":{},"大":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"取":{"docs":{},"元":{"docs":{},"素":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.014814814814814815},"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.0111731843575419}},",":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"到":{"docs":{},"该":{"docs":{},"组":{"docs":{},"合":{"docs":{},"要":{"docs":{},"求":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"没":{"docs":{},"有":{"docs":{},"影":{"docs":{},"响":{"docs":{},"(":{"1":{"docs":{},",":{"2":{"docs":{},")":{"docs":{},"与":{"docs":{},"（":{"2":{"docs":{},",":{"1":{"docs":{},"）":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"以":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"参":{"docs":{},"数":{"docs":{},"开":{"docs":{},"始":{"docs":{"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"未":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"拿":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"已":{"docs":{},"经":{"docs":{},"排":{"docs":{},"好":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"中":{"docs":{"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"找":{"docs":{},"分":{"docs":{},"割":{"docs":{},"点":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"结":{"docs":{},"束":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}}}}}}}},"脑":{"docs":{},"海":{"docs":{},"中":{"docs":{},"要":{"docs":{},"有":{"docs":{},"图":{"docs":{},"像":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}}}}}}}},"顺":{"docs":{},"序":{"docs":{},"有":{"docs":{},"影":{"docs":{},"响":{"docs":{},"，":{"docs":{},"如":{"docs":{},"（":{"1":{"docs":{},",":{"2":{"docs":{},"）":{"docs":{},"与":{"docs":{},"（":{"2":{"docs":{},",":{"1":{"docs":{},"）":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{"Chapter2/简单组合.html":{"ref":"Chapter2/简单组合.html","tf":0.007407407407407408}}}}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}},"（":{"1":{"docs":{},",":{"2":{"docs":{},"）":{"docs":{},"与":{"docs":{},"(":{"2":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}},"交":{"docs":{},"换":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"列":{"docs":{},"表":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"左":{"docs":{},"边":{"0":{"docs":{},"与":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}},"docs":{}}}}}},"优":{"docs":{},"化":{"docs":{"Chapter2/元素只取一次组合.html":{"ref":"Chapter2/元素只取一次组合.html","tf":0.00558659217877095}}}},"由":{"docs":{},"于":{"docs":{},"不":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"该":{"docs":{},"组":{"docs":{},"合":{"docs":{},"(":{"1":{"docs":{},",":{"2":{"docs":{},")":{"docs":{},"(":{"2":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"只":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"(":{"1":{"docs":{},",":{"2":{"docs":{},")":{"docs":{},"就":{"docs":{},"行":{"docs":{},"了":{"docs":{},"，":{"docs":{},"将":{"docs":{},"每":{"docs":{},"次":{"docs":{},"选":{"docs":{},"取":{"docs":{},"过":{"docs":{},"的":{"docs":{},"在":{"docs":{},"下":{"docs":{},"次":{"docs":{},"选":{"docs":{},"值":{"docs":{},"时":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{},"每":{"docs":{},"次":{"docs":{},"递":{"docs":{},"归":{"docs":{},"时":{"docs":{},"是":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"元":{"docs":{},"素":{"docs":{"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"该":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"，":{"docs":{},"是":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"即":{"docs":{},"递":{"docs":{},"归":{"docs":{},"时":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"i":{"docs":{"Chapter2/元素可重复但顺序无影响.html":{"ref":"Chapter2/元素可重复但顺序无影响.html","tf":0.0136986301369863},"Chapter2/元素不可重复并且顺序无影响.html":{"ref":"Chapter2/元素不可重复并且顺序无影响.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"列":{"docs":{},"不":{"docs":{},"带":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}}}}}},"序":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"将":{"docs":{},"同":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"聚":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"，":{"docs":{},"以":{"docs":{},"防":{"docs":{},"在":{"docs":{},"交":{"docs":{},"换":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"出":{"docs":{},"现":{"docs":{},"重":{"docs":{},"复":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"稳":{"docs":{},"定":{"docs":{},"性":{"docs":{},"判":{"docs":{},"定":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}}}}}},"及":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":3.333333333333333}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}},"二":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}},"需":{"docs":{},"要":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"回":{"docs":{},"来":{"docs":{"Chapter2/排列问题.html":{"ref":"Chapter2/排列问题.html","tf":0.005555555555555556}}}}}},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"（":{"docs":{},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"）":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"值":{"docs":{"Chapter4/":{"ref":"Chapter4/","tf":0.5}}}}}}}}}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"思":{"docs":{},"想":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"交":{"docs":{},"换":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"交":{"docs":{},"换":{"docs":{},"在":{"docs":{},"那":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},",":{"docs":{},"第":{"docs":{},"六":{"docs":{},"节":{"docs":{},"是":{"docs":{},"交":{"docs":{},"换":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"这":{"docs":{},"在":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"行":{"docs":{},"不":{"docs":{},"同":{"docs":{},"。":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"恢":{"docs":{},"复":{"docs":{},"，":{"docs":{},"准":{"docs":{},"备":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"新":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}}}}}}}}}},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"重":{"docs":{},"复":{"docs":{},"排":{"docs":{},"列":{"docs":{},"问":{"docs":{},"题":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":5}}}}}}}}}}},"让":{"docs":{},"右":{"docs":{},"边":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"出":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"，":{"docs":{},"向":{"docs":{},"前":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"Chapter2/有元素重复排序问题.html":{"ref":"Chapter2/有元素重复排序问题.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"搜":{"docs":{},"索":{"docs":{"Chapter3/":{"ref":"Chapter3/","tf":0.02702702702702703}}}},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"不":{"docs":{},"稳":{"docs":{},"定":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}}}}}}}}}}}},"可":{"docs":{},"视":{"docs":{},"化":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513}},"排":{"docs":{},"序":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":0.012195121951219513}}}}}}},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{"Chapter3/选择排序.html":{"ref":"Chapter3/选择排序.html","tf":5}}}},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{},"放":{"docs":{},"在":{"docs":{},"最":{"docs":{},"左":{"docs":{},"边":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}}}}}}}},"&":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703},"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.0392156862745098}},"&":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":0.019138755980861243}}}},"y":{"docs":{},"e":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":0.012195121951219513},"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":0.02702702702702703}}}},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{"Chapter3/冒泡排序.html":{"ref":"Chapter3/冒泡排序.html","tf":5.012195121951219}}}}}},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{"Chapter3/插入排序.html":{"ref":"Chapter3/插入排序.html","tf":5}}}}},"补":{"docs":{},"法":{"docs":{},"搜":{"docs":{},"索":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":5}}}},"查":{"docs":{},"找":{"docs":{},"是":{"docs":{},"以":{"docs":{},"数":{"docs":{},"据":{"docs":{},"分":{"docs":{},"布":{"docs":{},"的":{"docs":{},"近":{"docs":{},"似":{"docs":{},"直":{"docs":{},"线":{"docs":{},"来":{"docs":{},"作":{"docs":{},"比":{"docs":{},"例":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"以":{"docs":{},"求":{"docs":{},"出":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"并":{"docs":{},"进":{"docs":{},"行":{"docs":{},"数":{"docs":{},"据":{"docs":{},"比":{"docs":{},"对":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"取":{"docs":{},"出":{"docs":{},"的":{"docs":{},"值":{"docs":{},"小":{"docs":{},"于":{"docs":{},"要":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"提":{"docs":{},"高":{"docs":{},"下":{"docs":{},"界":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"取":{"docs":{},"出":{"docs":{},"的":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{},"要":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"降":{"docs":{},"低":{"docs":{},"下":{"docs":{},"界":{"docs":{},"，":{"docs":{},"如":{"docs":{},"此":{"docs":{},"不":{"docs":{},"断":{"docs":{},"的":{"docs":{},"减":{"docs":{},"少":{"docs":{},"搜":{"docs":{},"寻":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"其":{"docs":{},"本":{"docs":{},"原":{"docs":{},"则":{"docs":{},"与":{"docs":{},"二":{"docs":{},"分":{"docs":{},"法":{"docs":{},"查":{"docs":{},"找":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"至":{"docs":{},"于":{"docs":{},"中":{"docs":{},"间":{"docs":{},"值":{"docs":{},"的":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"是":{"docs":{},"透":{"docs":{},"过":{"docs":{},"比":{"docs":{},"例":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"k":{"docs":{},"是":{"docs":{},"指":{"docs":{},"定":{"docs":{},"要":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{},"m":{"docs":{},"则":{"docs":{},"是":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"值":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"–":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}},"两":{"docs":{},"头":{"docs":{},"并":{"docs":{},"进":{"docs":{},"找":{"docs":{},"分":{"docs":{},"割":{"docs":{},"点":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}},"则":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}},"如":{"docs":{},"果":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"例":{"docs":{},"子":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"索":{"docs":{},"引":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"即":{"docs":{},"将":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}},"位":{"docs":{},"到":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"应":{"docs":{},"该":{"docs":{},"出":{"docs":{},"于":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"表":{"docs":{},"示":{"docs":{},"存":{"docs":{},"储":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},")":{"docs":{},"应":{"docs":{},"该":{"docs":{},"减":{"1":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"：":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}},"快":{"docs":{},"速":{"docs":{},"快":{"docs":{},"速":{"docs":{},"的":{"docs":{},"完":{"docs":{},"整":{"docs":{},"跟":{"docs":{},"踪":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}},"排":{"docs":{},"序":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":5.009803921568627}}}}}},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"的":{"docs":{},"样":{"docs":{},"子":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}}}}}},"枢":{"docs":{},"纽":{"docs":{},"点":{"docs":{"Chapter3/快速排序.html":{"ref":"Chapter3/快速排序.html","tf":0.00980392156862745}}}}},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"不":{"docs":{},"断":{"docs":{},"的":{"docs":{},"分":{"docs":{},"解":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"在":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"不":{"docs":{},"断":{"docs":{},"合":{"docs":{},"并":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"不":{"docs":{},"断":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"份":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"只":{"docs":{},"剩":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":5.010204081632653}}}}}},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"用":{"docs":{},"于":{"docs":{},"存":{"docs":{},"储":{"docs":{},"合":{"docs":{},"并":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"较":{"docs":{},"两":{"docs":{},"个":{"docs":{},"列":{"docs":{},"表":{"docs":{},"添":{"docs":{},"加":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"排":{"docs":{},"序":{"docs":{},"号":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}}}}}}}}},"":{"docs":{"Chapter3/归并排序.html":{"ref":"Chapter3/归并排序.html","tf":0.01020408163265306}}},"二":{"docs":{},"分":{"docs":{},"搜":{"docs":{},"索":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":5}}}}}},"迭":{"docs":{},"代":{"docs":{},"实":{"docs":{},"现":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903}}}}}},"针":{"docs":{},"对":{"docs":{},"的":{"docs":{},"是":{"docs":{},"已":{"docs":{},"经":{"docs":{},"排":{"docs":{},"序":{"docs":{},"好":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{"Chapter3/二分法搜索.html":{"ref":"Chapter3/二分法搜索.html","tf":0.03225806451612903}}}}}}}}}}}}}},"参":{"docs":{},"考":{"docs":{},"：":{"docs":{},"插":{"docs":{},"补":{"docs":{},"法":{"docs":{},"查":{"docs":{},"找":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},")":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"二":{"docs":{},"分":{"docs":{},"法":{"docs":{},"的":{"docs":{},"提":{"docs":{},"高":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}}}}}}}},"用":{"docs":{},"插":{"docs":{},"补":{"docs":{},"法":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"来":{"docs":{},"找":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"只":{"docs":{},"是":{"docs":{},"除":{"docs":{},"以":{"2":{"docs":{"Chapter3/插补法搜索.html":{"ref":"Chapter3/插补法搜索.html","tf":0.012987012987012988}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"洗":{"docs":{},"牌":{"docs":{},"算":{"docs":{},"法":{"docs":{"Chapter3/洗牌算法.html":{"ref":"Chapter3/洗牌算法.html","tf":5}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"(":{"docs":{},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"Chapter4/":{"ref":"Chapter4/","tf":3.333333333333333}}}}}}}}}}}},"寻":{"docs":{},"找":{"docs":{},"串":{"docs":{},"中":{"docs":{},"最":{"docs":{},"长":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{"Chapter4/LIS-Algorithm.html":{"ref":"Chapter4/LIS-Algorithm.html","tf":0.008403361344537815}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{"Chapter4/Right-Down.html":{"ref":"Chapter4/Right-Down.html","tf":5}}}}}}},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"已":{"docs":{},"经":{"docs":{},"通":{"docs":{},"过":{"docs":{},"计":{"docs":{},"算":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"中":{"docs":{},"了":{"docs":{},"，":{"docs":{},"该":{"docs":{},"结":{"docs":{},"果":{"docs":{},"只":{"docs":{},"是":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"中":{"docs":{},"的":{"docs":{},"某":{"docs":{},"一":{"docs":{},"项":{"docs":{"Chapter4/":{"ref":"Chapter4/","tf":0.5}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"length":11370},"corpusTokens":["!=","\"(","\"))","\"+this.col+\"","\"+this.row+\"","\",arr)","\",len(longestseq))","\"__main__\":","#","##","###","####","#####","#or","#todo","#todo:","#因为不重复，所以剔除已经选过的，startnum+1","%","%d","%d\"","&","&&","'","'''","'))","'){","'*',","',","';","'__main__':","'a',","'a']","'b',","'b']","'c',","'c']","'e'","'e'){","'e'},","'o',","'o']","'v';","'},","(","(*)","(1,","(2,","(4,","(5,","(6,","(backward","(bottom","(bottom)","(can","(col>=col_len)","(combin","(for","(forward","(instead","(key,result,arr[result]))","(obtain","(recurs","(row,col)","(row=row_len)","(to","(typic","(unlik","(visualize)","(with","(x","(x+1,y)","(x,i","(x,y)","(x,y+1)",")",")\";",")\\n\",finalrow,finalcol);","){","*","**","***","****","*****","*/","+","+=",",","/","/**","//","////","//append","//bottom","//check","//default","//defin","//down","//find","//invok","//left","//mark","//print","//remov","//right","//system.out.println(\"found","//temporarli","//up","//use","//we","//write","0","0)","0,","0,0,0","000","001","010","011","0:","0;","1","1)","1):","1);","1,","1,col);","1,start","1,y)","10","100","100,","101","110","111","11]","12,","1:","1;","1]","1])","1];","1]>maxprev){","1][col]","1][col];","1][cur_col]","1前进，直到right减到lo时，此时的arr[right]","1就是分割点","1的位置就是pivot的位置","1的元素，","2","2)","2,","2,4","2/28/19","23,","2]","2},","3","3,","3,2","342]","3]","4","4,","43,","45,","4]","5","5,","5]","6","6)","6,","6},","7","7)","7,","7},","8","8)","8,","8;","8}","8},","8的数字组合,不重复","9,","9]","9},","=","==",">",">\");",">(",">=",">=0","@overrid","[\"a\",\"o\",\"a\",\"a\"]","[\"a\",\"o\",\"b\",\"a\"]","[\"a\",\"o\",\"b\",\"c\"]","['a',","['b',","['c',","['o',","[0,","[0]*k","[1,","[2,","[3,","[3,14,5,12,15,7,8,9,11,10,1]","[]","[_","[false]*(n+1)","[i","[none]*(len(leftlist)+len(rightlist))","[none]*3","[none]*k","[none]*len(sequence)","_","__name__","a){","action","action结合","again)","algorithm","algorithm课程","alreadi","areadi","args)","args){","arr","arr.sort()","arr=[\"a\",\"o\",\"b\",\"a\"]","arr[%d]","arr[3]","arr[:middle]","arr[],int","arr[end]","arr[first_unsorted_index]","arr[i+1]","arr[i+1],arr[i]","arr[i]","arr[i],arr[i+1]","arr[i],arr[j]","arr[i],arr[minindex]","arr[i],arr[random_index]","arr[i]>arr[i+1]:","arr[index]","arr[index]+findsum(arr,index","arr[index];","arr[j],arr[i]","arr[j]:","arr[left,n","arr[left]","arr[left],arr[right]","arr[lo]","arr[mid]","arr[middle:]","arr[minindex]","arr[minindex],arr[i]","arr[n]","arr[random_index],arr[i]","arr[right],arr[left]","arr[right]:","array","array.","array[i","array[i]","attack","attackedcolumn","attackedleftdiagon","attackedrightdiagon","averag","average:","avoid","back","backtrack","base","before.","before:","best","best,","binarysearch(arr,key,start,end):","binarysearch(arr,key,start,mid","boolean[15];","boolean[8];","boolean[]","boolean[][]","boolean[rows][cols];","boolean[size][size];","bottom","bottomm","boundari","bubble_sort(arr)","bubble_sort(arr):","calculation通过自底向上，将数据准备好","call","case:","cell","cell[row,","cells.length;","cells:","cells[0].length;","cells[cur_row][cur_col];","cells[row][col];","chang","char[][]","check","chessboard","choos","class","col","col){","col;","col=0;col","col]","col],","col_len","collect","combin","combinations,","combinatori","compar","complex","comput","consid","continu","core","corner","corner)","coursera","criteria","cur_col","cur_col>=0","cur_row","current","current_index","cycles)","data","deal","def","differ","direct","directions:","directli","divid","down","drop","dynam","each","earli","easili","effici","element","elements。","elif","else:","empti","end","endkey:","end不能小于start","equal","equal,","etc.","example:","exchang","exercise.","exit","exit!\");","exit.","exit.\");","explor","extract","fals","fill","final","finalcol){","finalrow,int","find","findexit(0,0);","findexit(int","findexit(row","findexit(row+1,col);","findexit(row,col","findexit(row,col+1);","findexit(x,y)","findlongestincreasingsubsequence(sequence)","findlongestincreasingsubsequence(sequence):","findsum(arr,arr.length","findsum(int","findsum).","finished:","first","first_ubsort","first_unsorted_index","first_unsorted_index>0","firstel","fisher–y","for(int","for(tupl","for循环+递归","for循环的start也就是从集合中取的数据范围缩小","found","found\")","free","free[i]","fruit","gen01(arr,0)","gen01(arr,n):","gen01(arr,n+1)","gencombs(arr,0,4,8)","gencombs(arr,index+1,i+1,endnum)","gencombs(arr,index,startnum,endnum):","gener","generate_variations(arr,0)","generate_variations(arr,free,0,0)","generate_variations(arr,free,index+1,index+1)","generate_variations(arr,free,index,start):","generate_variations(arr,index):","generate_variations(arr,index+1)","generate_variations(arr,n,0)","generate_variations(arr,n,0,1)","generate_variations(arr,size_of_set,index):","generate_variations(arr,size_of_set,index+1)","generate_variations(arr,size_of_set,index+1,i)","generate_variations(arr,size_of_set,index+1,i+1)","generate_variations(arr,size_of_set,index,start):","generate_variations(arr,used,n,0)","generate_variations(arr,used,size_of_set,index):","generate_variations(arr,used,size_of_set,index+1)","given","go","hardcod","here","hi","high","highli","hoar","hold","i;","i=0;i","if(","if(cur_row>0","if(index","if(lab[row][col]","if(maxprev","if(row","import","increas","index","index){","index+1","index+1,i+1","index>=0","indexoflastunsortedel","input","insert","insertion_sort(arr):","int","int(input(\"pleas","int(input())","int[,]","int[]","int[][]","int[]{1,2,3,4,5,6};","int[rows][cols];","integer.min_value){","interpolation_search(arr,key)","interpolation_search(sortedarr,key):","introduct","is:","it.","item","iter","itself","j","java.util.linkedlist;","java.util.list;","k","k)","keep","key","key:","key_not_found","lab","lab.length;","lab[0].length;","lab[row][col]","labyrinth","larger","largest","last","lastindex","left","left,","left_arr","leftel","leftindex","leftindex,rightindex,mergedindex","len(arr)","len(arr)//2","len(arr):","len(free):","len(sortedarr)","len_seq","len_seq[i]","len_seq[i]>maxlen:","length","li","linear","linkedlist<>();","lis.insert(0,sequence[current_index])","list","lists)","lo","lo+1","lomuto","longer","longest","longestseq","low","m","machin","main(string[]","maintain","main{","mani","map(int,input().split('","mark","math","matrix","matter","max","max(sum[row","maxlen","maxprev","maxprev){","maxprev;","mean","member","memory:","merg","merge(left_arr,right_arr)","merge(leftlist,rightlist):","merge_sort(arr):","merge_sort(left_arr)","merge_sort(right_arr)","mergelist","method","method:","mid","middl","min","minindex","more","move","multipl","my_shuffle(arr)","my_shuffle(arr):","n","n,k","neighbor","new","next","non","note","note:","number","number:","o(1)","o(log(n))","o(n)","o(n);","o(n*log(n))","o(n*log(n));","o(n2)","obtain","on","on:","onc","order","other","otherwise:","out","outsid","packag","pair","paralleliz","paramet","partion","partion(arr,lo,hi):","partit","passabl","passable,","passable,'","path","path){","path.add(new","path.remove(path.size()","path[cur_row][cur_col]","perm(arr,0,0)","perm(arr,index,start):","perm(arr,left+1,left+1)","perm(free,index):","perm(free,index+1)","perm(fruits,0)","permuterep(arr,0,len(arr)","permuterep(arr,left+1,end)","permuterep(arr,start,end):","perspect","pivot","pivot:","pivot;","pivot时，right","place","placement/removal.","pleas","posit","possiabl","possibl","post","practic","pre","predecessor","preserv","prev","prev[]","prev[current_index]","prev[i]","prev[x]","previou","print","print(\"#\"*n)","print(\"(\",*arr,\")\")","print(\"*\"*n)","print(\"aft","print(\"before:","print(\"finished:","print(\"max","print(\"not","print(\"th","print(*arr,sep=\"\")","print(arr)","print(free)","print(longestseq)","printfigure(5)","printfigure(n","printfigure(n):","printpath(int","printpath(row,col);","printsolution();","privat","problem","program","programming)","properti","public","put","putqueens(int","python设计模式基础","queen","queepuzzl","quick","quick_sort(arr,lo,hi):","quicksort","random","random.randint(0,len(arr)","random.shuffle(arr)","random_index","rang","range(0,len(arr)):","range(1,n+1):","range(1,n+1)]","range(1,size_of_set+1):","range(10)]","range(2):","range(end","range(i):","range(i+1,len(arr)):","range(index+1,len(free)):","range(left+1,end+1,1):","range(left+1,len(arr)):","range(left,end):","range(len(arr)","range(len(arr)):","range(len(sequence)):","range(start,len(free)):","range(start,size_of_set+1):","range(startnum,endnum+1):","range(store,hi+1):","range(unsorted_length","reach","rearrang","recov","recurs","recursion)","recursion;","recursivearray","rel","remov","repetit","repetition)!","repetition差不多，只需要在递归传递集合范围的时候处理下即可","repres","rest","result","return","return;","right","right,","right;","right_arr","rightel","rightelement)","row","row){","row,int","row;","row=0;row","row_len","same","search","searching)","second,","select","select_sort(arr)","select_sort(arr):","seq[x]","sequenc","sequence[j]len_seq[i]:","set","shuffl","simplifi","singl","size","size)","smaller","softuni中给了很详细的解答","solut","solution),","solution:","solutionfound","sort","sort)","sorted:","space","specifi","ss","stabl","stable:","stack","start","static","step","stop","store","string","structur","sub","subset","such","sum","sum[row,","sum_matrix","sum_matrix[cur_row","sum_matrix[cur_row][cur_col]","sum_matrix[row","sum_matrix[row][col","sum_matrix[row][col]","sum_valu","suppos","swap","swap(arr,i,j):","swap(arr,j,i):","swap(arr,left,right)","swap(arr,left,right):","swap(free,index,i)","swap(leftelement,","system.out.print(t+\"","system.out.printf(\"(","system.out.println(\"found","system.out.println(result);","t:","tack","that'","them,","things,","this.col","this.row","through","todo","todo:","top","tostring()","track","travel","tri","true","true:","true;","tuple(int","tuple(row,col));","tuple{","two","typic","unmark","unpredict","unsort","unsorted_length","unstabl","until","up","up,","updat","up准备数据","us","used[i]","used[i]:","v(n,","valid","valid.","valu","var(index","var(index)","varat","variat","variations).","variations:","visit","visited,","void","walk","want","way","way)","ways:","we'v","we’ll","while(cur_row>=0","without","worst","worst:","x","ye","{","{'","{'*',","{0,","{1,","{2,","{3,","{4,","{9,","||","}","};","}else{","–","•","…","一个是merge_sort不断的分解，一个merge在回溯的过程中不断合并","七大基本原则","与for,combinations思想，以及pr","两个方法：","两头并进找分割点","为什么选择排序不稳定","二分搜索","交换元素，每次递归的时候传递的是index数据的列表","交换最左边0与store","从大集合中取元素","从大集合中取元素,考虑到该组合要求顺序没有影响(1,2)与（2,1）是相同的，所以for循环以start参数开始","从左到右找分割点","从左到右进行遍历，直到结束","从未排序的元素中拿出一个插入到已经排好的排序中","优化","使用一个额外的used数据进行标记","使用递归的方法","例子","允许取重复元素","允许重复","元素不能重复，(1,1)就不行","元素不重复无序组合","元素不重复有序组合","元素不重复有序组合中的排列解法","元素无重复排列问题","元素重复无序组合","元素重复有序组合","八皇后问题","冒泡排序","分别用列，左斜线，右斜线来代替在整个棋盘上找冲突","则store","初始化","动态规划(dynam","参考：插补法查找(interpolationsearch)","可视化","可视化排序","在做标记的时候，直接在迷宫上标记了","在回溯的过程中又不断的合并","如果right例子","它的算法思想并不是交换元素，而是交换在那个位置的元素,第六节是交换元素，这在有重复元素的时候行不同。","定义store索引来存储即将下一个比pivot小的数","定位到pivot应该出于的位置，此时是store(表示存储下一个比pivot小的数)应该减1，stor","寻找串中最长的子串","将数组不断分成两份，直到只剩一个元素","归并排序","当arr[left]","很巧妙的转换:","循环：","快速快速的完整跟踪","快速排序","恢复，准备下一次新元素的处理","所有数字组合","找到并打印所有路径","找最长子串","排列不带重复元素","排序及搜索(sort","排序的目的是为了将同种类型的聚在一起，以防在交换位置上的元素时出现重复","排序的稳定性判定","插入排序","插补法搜索","插补法查找是以数据分布的近似直线来作比例运算，以求出中间的索引并进行数据比对，如果取出的值小于要寻找的值，则提高下界，如果取出的值大于要寻找的值，则降低下界，如此不断的减少搜寻的范围，所以其本原则与二分法查找是相同的，至于中间值的寻找是透过比例运算，如下所示，其中k是指定要寻找的对象，而m则是可能的索引值","搜索","数字递增形式的组合","数组求和","新建一个新的list用于存储合并的结果","方法","方法二","是二分法的提高","最坏情况的样子","有元素重复排列问题","枢纽点","比较两个列表添加","洗牌算法","生成所有的01组合","用插补法的思想来找mid，而不是只是除以2","由于不考虑顺序，该组合(1,2)(2,1)是一样的，所以只生成一个(1,2)就行了，将每次选取过的在下次选值时去掉，也就是for的start,每次递归时是后面的集合元素","第一章","第一节","第七节","第三章","第三节","第二章","第二节","第五节","第八节","第六节","第四章","第四节","算法可视化","算法比较","组合及排列(combinatorial)","组合需要注意的是，元素是否能重复取，取出的元素之间顺序是否考虑","考虑顺序但是不重复，这就可以成为一个排列问题permut","脑海中要有图像","要求的结果已经通过计算存储在table中了，该结果只是table中的某一项","计算最大和","让右边所有的元素都出于这个left位置，然后在恢复，向前处理一个元素","该start，是arr前一个元素的后一个元素，即递归时传递的i","课程学习","辅助工具","返回排序号的数组","这与第六节交换的元素思想完全不同，一个是交换元素能够原原本本的马上交换回来，一个是等到右边的元素都与该位置交换完才恢复，进而left向左继续处理元素。","这张图是组合所有元素，允许重复","这题是打印出所有4","迭代实现","选择pivot,放在最左边","选择排序","递归(recursion)","递归方法，传递边界","通过for循环依次处理每一个位置然后递归","针对的是已经排序好的数据","需要一个table（一般是一个数组数据结构）来记录值","需要回溯回来","顺序有影响（1,2）与(2,1)不一样","顺序有影响，如（1,2）与（2,1）是不同的",""],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction\n\npython设计模式基础-七大基本原则\nss\n\n课程学习\n\ncoursera-algorithm I\n\n\n\n辅助工具\n\n算法可视化\n\n"},"Chapter1/":{"url":"Chapter1/","title":"第一章-递归(Recursion)","keywords":"","body":"Recursion\n\n\ncalls itself\nExit criteria (bottom)\nParameters and return values travel through the stack at each step\n\nPre-Actions and Post-Actions\nRecursive computation can be based on:\n\nPre-actions + recursive calls (forward way)\nRecursive calls + post-actions (backward way)\nPre-actions + recursive calls + post-actions (combined way)\n\ndef printFigure(n):\n    if n == 0:\n        return\n    # pre action\n    print(\"*\"*n)\n    printFigure(n-1)\n    print(\"#\"*n)\n\nprintFigure(5)\n\n'''\n*****\n****\n***\n**\n*\n#\n##\n###\n####\n#####\n'''\n\nCombinations\nCombinations in math represent all the ways to extract a subset from a larger set of elements\nSelect k members from a set of n elements。\nExample: we can select 3 different elements from the set\n{4, 5, 6, 7, 8} in 10 different ways:\n(4, 5, 6)     (4, 5, 7)     (4, 5, 8)     (4, 6, 7)     (4, 6, 8)\n(4, 7, 8)     (5, 6, 7)     (5, 6, 8)     (5, 7, 8)     (6, 7, 8)\n\nCombinations with and without repetitions can be easily generated with recursion\n\nBacktracking\nBacktracking is a class of algorithms for finding all solutions to some combinatorial computational problem\n\nAt each step tries all perspective possibilities recursively \nDrop all non-perspective possibilities as early as possible\n\n与for,Combinations思想，以及pre-post action结合\n"},"Chapter1/Recursive-Array-Sum.html":{"url":"Chapter1/Recursive-Array-Sum.html","title":"1-数组求和","keywords":"","body":"• The method should return the current element + the sum of all next elements (obtained by recursively calling FindSum).\n• The recursion should stop when there are no more elements in the array.\npublic class RecursiveArray {\n    public static void main(String[] args) {\n        int[] arr = new int[]{1,2,3,4,5,6};\n        int result = FindSum(arr,arr.length-1);\n        System.out.println(result);\n    }\n\n    public static int FindSum(int arr[],int index){\n        //// TODO: 2/28/19 set bottomm of recursion\n        if(index == 0)\n            return arr[index];\n        return arr[index]+FindSum(arr,index-1);\n    }\n}\n\nNote: In practice recursion should not be used here (instead use an iterative solution), this is just an exercise.\n"},"Chapter1/generate01.html":{"url":"Chapter1/generate01.html","title":"2-生成所有的01组合","keywords":"","body":"\n通过for循环依次处理每一个位置然后递归\n\n\ndef Gen01(arr,n):\n    if n == len(arr):\n        print(*arr,sep=\"\")\n        return\n\n    for i in range(2):\n        arr[n] = i\n        Gen01(arr,n+1)\n\n\narr = [None]*3\nGen01(arr,0)\n\n'''\n000\n001\n010\n011\n100\n101\n110\n111\n'''\n\n"},"Chapter1/combineGenerator.html":{"url":"Chapter1/combineGenerator.html","title":"3-所有数字组合","keywords":"","body":"\n这张图是组合所有元素，允许重复\n\n\n\n这题是打印出所有4-8的数字组合,不重复\n\ndef GenCombs(arr,index,startnum,endnum):\n    if index >= len(arr):\n        print(\"(\",*arr,\")\")\n        return\n    for i in range(startnum,endnum+1):\n        arr[index] = i;\n        #因为不重复，所以剔除已经选过的，startnum+1\n        GenCombs(arr,index+1,i+1,endnum)\n\narr = [None]*3\nGenCombs(arr,0,4,8)\n\n'''\n( 4 5 6 )\n( 4 5 7 )\n( 4 5 8 )\n( 4 6 7 )\n( 4 6 8 )\n( 4 7 8 )\n( 5 6 7 )\n( 5 6 8 )\n( 5 7 8 )\n( 6 7 8 )\n'''\n\n"},"Chapter1/eight-Queen-puzzle.html":{"url":"Chapter1/eight-Queen-puzzle.html","title":"4-八皇后问题","keywords":"","body":"\nSoftUni中给了很详细的解答\n\n很巧妙的转换:\nBy keeping an int[,] matrix of all attacked positions and checking the new position directly in it. This will be complex to maintain because the matrix should change many positions after each queen placement/removal.\n分别用列，左斜线，右斜线来代替在整个棋盘上找冲突\n\npublic class QueePuzzle {\n\n    static final int Size = 8;\n    //Define a Data Structure to Hold the Chessboard\n    static boolean[][] chessboard = new boolean[Size][Size];\n\n    //Define a Data Structure to Hold the Attacked Positions\n    static boolean[] attackedColumns = new boolean[8];\n    static boolean[] attackedLeftDiagonals = new boolean[15];\n    static boolean[] attackedRightDiagonals = new boolean[15];\n\n    static int solutionFound = 0;\n    //Write the Backtracking Algorithm\n    static void PutQueens(int row){\n        if(row == Size)\n            printSolution();\n        for(int col=0;col\n"},"Chapter1/find-and-print-paths.html":{"url":"Chapter1/find-and-print-paths.html","title":"5-找到并打印所有路径","keywords":"","body":"\nWe are given a labyrinth\n\nRepresented as matrix of cells of size M x N\nEmpty cells are passable, the others (*) are not\n\n\nWe start from the top left corner and can move in all 4 directions: left, right, up, down\n\nWe want to find all paths to the bottom right corner\n\n\n\nSuppose we have an algorithm FindExit(x,y) that finds and prints all paths to the exit (bottom right corner) starting from position (x,y)\n\nIf (x,y) is not passable, no paths are found\nIf (x,y) is already visited, no paths are found\nOtherwise:\nMark position (x,y) as visited (to avoid cycles)\nFind recursively all paths to the exit from all neighbor cells: (x-1,y) , (x+1,y) , (x,y+1) , (x,y-1)\nMark position (x,y) as free (can be visited again)\n\n\n\n\n在做标记的时候，直接在迷宫上标记了\n\npackage recursion;\n\nimport java.util.List;\nimport java.util.LinkedList;\n\n\npublic class Labyrinth {\n\n    //use to store (row,col) pairs\n    static class Tuple{\n        int row;\n        int col;\n        Tuple(int row,int col){\n            this.row = row;\n            this.col = col;\n        }\n\n        @Override\n        public String toString() {\n            return \"( \"+this.row+\" , \"+this.col+\" )\";\n        }\n    }\n\n    // *  are not passable,' ' are passable, 'e'  is the exit\n   static char[][] lab =\n            {\n                    {' ', ' ', ' ', '*', ' ', ' ', ' '},\n                    {'*', '*', ' ', '*', ' ', '*', ' '},\n                    {' ', ' ', ' ', ' ', ' ', ' ', ' '},\n                    {' ', '*', '*', '*', '*', '*', ' '},\n                    {' ', ' ', ' ', ' ', ' ', ' ', 'e'},\n            };\n\n    static final int row_len = lab.length;\n    static final int col_len = lab[0].length;\n\n    static List path = new LinkedList<>();\n\n    public static void main(String[] args) {\n\n        FindExit(0,0);\n    }\n\n    private static void FindExit(int row,int col){\n        if( (row=row_len) || (col>=col_len) ){\n            //we are out of the boundary\n            return;\n        }\n\n        //check if we found the exit\n        if( lab[row][col] == 'e'){\n            //System.out.println(\"Found Exit!\");\n            printPath(row,col);\n            return;\n        }\n\n        //check if passable\n        if(lab[row][col] != ' '){\n            return;\n        }\n\n        //Temporarly mark the current cell as visited\n        lab[row][col] = 'v';\n\n        //Append the current direction to the path\n        path.add(new Tuple(row,col));\n\n        //Invoke  recursion to explore all possiable directions\n        FindExit(row,col-1); //left\n        FindExit(row-1,col); //up\n        FindExit(row,col+1); //right\n        FindExit(row+1,col); //down\n\n        //mark back the current\n        lab[row][col] = ' ';\n\n        //Remove the last direction from the path\n        path.remove(path.size()-1);\n\n    }\n\n\n    private static void printPath(int finalRow,int finalCol){\n        System.out.println(\"Found the exit.\");\n        for(Tuple t: path){\n            System.out.print(t+\"->\");\n        }\n        System.out.printf(\"( %d , %d )\\n\",finalRow,finalCol);\n\n    }\n}\n\n/**\n Found the exit.\n ( 0 , 0 )->( 0 , 1 )->( 0 , 2 )->( 1 , 2 )->( 2 , 2 )->( 2 , 1 )->( 2 , 0 )->( 3 , 0 )->( 4 , 0 )->( 4 , 1 )->( 4 , 2 )->( 4 , 3 )->( 4 , 4 )->( 4 , 5 )->( 4 , 6 )\n Found the exit.\n ( 0 , 0 )->( 0 , 1 )->( 0 , 2 )->( 1 , 2 )->( 2 , 2 )->( 2 , 3 )->( 2 , 4 )->( 1 , 4 )->( 0 , 4 )->( 0 , 5 )->( 0 , 6 )->( 1 , 6 )->( 2 , 6 )->( 3 , 6 )->( 4 , 6 )\n Found the exit.\n ( 0 , 0 )->( 0 , 1 )->( 0 , 2 )->( 1 , 2 )->( 2 , 2 )->( 2 , 3 )->( 2 , 4 )->( 2 , 5 )->( 2 , 6 )->( 3 , 6 )->( 4 , 6 )\n */\n\n"},"Chapter2/":{"url":"Chapter2/","title":"第二章-组合及排列(Combinatorial)","keywords":"","body":"the recursive algorithms to generate variations and combinations (with and without repetition)!\nIntroduction\n\n组合需要注意的是，元素是否能重复取，取出的元素之间顺序是否考虑\n使用递归的方法\n\nGenerate Variations with Repetition\n\nfor循环+递归\n\n\nAlgorithm Var(index) to generate variations V(n, k)\nPut the numbers 0 … n-1 at position index\nCall Var(index + 1) to generate the rest of the array\n\n\n\n\n例子\n\n元素重复有序组合\n\nVariations without Repetition\n\nKeep Track of Used Numbers\n\n考虑顺序但是不重复，这就可以成为一个排列问题Permutations\n\n元素不重复有序组合中的排列解法\n\n例子\n\n元素不重复有序组合\n\nGenerate Combinations with Repetition\n\nIn combinations, order does not matter (unlike variations). This means that the combinations (1, 2) and (2, 1) are considered the same and once we obtain one of them, the other is no longer valid.\n\nfor循环的start也就是从集合中取的数据范围缩小\n例子\n元素重复无序组合\nGenerate Combinations without Repetition\nGenerate Combinations with Repetition差不多，只需要在递归传递集合范围的时候处理下即可\n        for i in range(start,size_of_set+1):\n            arr[index] = i\n            #TODO: continue generating varations  starting with index+1,i+1\n            generate_variations(arr,size_of_set,index+1,i+1)\n\n例子\n第四节 元素不重复无序组合\nVariations: Iterative Algorithm\n\n允许重复\n\n例子\n第五节 数字递增形式的组合\n"},"Chapter2/简单组合.html":{"url":"Chapter2/简单组合.html","title":"第一节 元素重复有序组合","keywords":"","body":"\n允许取重复元素\n顺序有影响，如（1,2）与（2,1）是不同的\n\n\n脑海中要有图像\n\nn,k = 3,2\n# result will be filled\narr = [None]*k\n\ndef generate_variations(arr,index):\n    # The bottom of the recursion is reached when we've filled K\n    # K elements that's the current index is outside the valid range\n    if index >= len(arr):\n        print(arr)\n    else:\n        # 从大集合中取元素\n        for i in range(1,n+1):\n            arr[index] = i\n            #TODO: continue generating varations  starting with index+1\n            generate_variations(arr,index+1)\n\nif __name__ == '__main__':\n    generate_variations(arr,0)\n\n'''\n[1, 1]\n[1, 2]\n[1, 3]\n[2, 1]\n[2, 2]\n[2, 3]\n[3, 1]\n[3, 2]\n[3, 3]\n'''\n\nRemove HardCode value\n\nTo simplify things, we’ll use hardcoded values before.\n\ndef generate_variations(arr,size_of_set,index):\n    # The bottom of the recursion is reached when we've filled K\n    # K elements that's the current index is outside the valid range\n    if index >= len(arr):\n        print(arr)\n    else:\n        # 从大集合中取元素\n        for i in range(1,size_of_set+1):\n            arr[index] = i\n            #TODO: continue generating varations  starting with index+1\n            generate_variations(arr,size_of_set,index+1)\n\nif __name__ == '__main__':\n    # such as input 3 2\n    n,k = map(int,input().split(' '))\n    # result will be filled\n    arr = [None]*k\n    generate_variations(arr,n,0)\n\n"},"Chapter2/元素只取一次组合.html":{"url":"Chapter2/元素只取一次组合.html","title":"第二节 元素不重复有序组合","keywords":"","body":"\n顺序有影响（1,2）与(2,1)不一样\n元素不能重复，(1,1)就不行\n\n使用一个额外的used数据进行标记\ndef generate_variations(arr,used,size_of_set,index):\n    # The bottom of the recursion is reached when we've filled K\n    # K elements that's the current index is outside the valid range\n    if index >= len(arr):\n        print(arr)\n    else:\n        # 从大集合中取元素\n        for i in range(1,size_of_set+1):\n            if not used[i]:\n                # TODO Mark i as used\n                used[i] = True\n                arr[index] = i\n                #TODO: continue generating varations  starting with index+1\n                generate_variations(arr,used,size_of_set,index+1)\n                # TODO unmark i as used\n                used[i] = False\n\nif __name__ == '__main__':\n    # such as input 3 2\n    n,k = map(int,input().split(' '))\n    # result will be filled\n    arr = [None]*k\n    # keep tack of used numbers\n    used = [False]*(n+1)\n    generate_variations(arr,used,n,0)\n\n'''\n[1, 2]\n[1, 3]\n[2, 1]\n[2, 3]\n[3, 1]\n[3, 2]\n'''\n\n优化\n\n交换元素，每次递归的时候传递的是index数据的列表\n\n\n\ndef generate_variations(arr,free,index,start):\n    # The bottom of the recursion is reached when we've filled K\n    # K elements that's the current index is outside the valid range\n    if index >= len(arr):\n        print(arr)\n    else:\n        # 从大集合中取元素\n        for i in range(start,len(free)):\n            arr[index] = free[i]\n            swap(free,index,i)\n            #TODO: continue generating varations  starting with index+1\n            generate_variations(arr,free,index+1,index+1)\n            swap(free,index,i)\n\ndef swap(arr,i,j):\n    arr[i],arr[j] = arr[j],arr[i]\n\n\nif __name__ == '__main__':\n    # such as input 3 2\n    n,k = map(int,input().split(' '))\n    # result will be filled\n    arr = [None]*k\n    free = [_ for _ in range(1,n+1)]\n    generate_variations(arr,free,0,0)\n\n'''\n3 2\n[1, 2]\n[1, 3]\n[2, 1]\n[2, 3]\n[3, 2]\n[3, 1]\n'''\n\n"},"Chapter2/元素可重复但顺序无影响.html":{"url":"Chapter2/元素可重复但顺序无影响.html","title":"第三节 元素重复无序组合","keywords":"","body":"\n由于不考虑顺序，该组合(1,2)(2,1)是一样的，所以只生成一个(1,2)就行了，将每次选取过的在下次选值时去掉，也就是for的start,每次递归时是后面的集合元素\n\ndef generate_variations(arr,size_of_set,index,start):\n    # The bottom of the recursion is reached when we've filled K\n    # K elements that's the current index is outside the valid range\n    if index >= len(arr):\n        print(arr)\n    else:\n        # 从大集合中取元素,考虑到该组合要求顺序没有影响(1,2)与（2,1）是相同的，所以for循环以start参数开始\n        # 该start，是arr前一个元素的后一个元素，即递归时传递的i\n        for i in range(start,size_of_set+1):\n            arr[index] = i\n            #TODO: continue generating varations  starting with index+1\n            generate_variations(arr,size_of_set,index+1,i)\n\n\nif __name__ == '__main__':\n    # such as input 3 2\n    n,k = map(int,input().split(' '))\n    # result will be filled\n    arr = [None]*k\n    generate_variations(arr,n,0,1)\n\n'''\n3 2\n[1, 1]\n[1, 2]\n[1, 3]\n[2, 2]\n[2, 3]\n[3, 3]\n'''\n\n"},"Chapter2/元素不可重复并且顺序无影响.html":{"url":"Chapter2/元素不可重复并且顺序无影响.html","title":"第四节 元素不重复无序组合","keywords":"","body":"def generate_variations(arr,size_of_set,index,start):\n    # The bottom of the recursion is reached when we've filled K\n    # K elements that's the current index is outside the valid range\n    if index >= len(arr):\n        print(arr)\n    else:\n        # 从大集合中取元素,考虑到该组合要求顺序没有影响(1,2)与（2,1）是相同的，所以for循环以start参数开始\n        # 该start，是arr前一个元素的后一个元素，即递归时传递的i\n        for i in range(start,size_of_set+1):\n            arr[index] = i\n            #TODO: continue generating varations  starting with index+1\n            generate_variations(arr,size_of_set,index+1,i+1)\n\n\nif __name__ == '__main__':\n    # such as input 3 2\n    n,k = map(int,input().split(' '))\n    # result will be filled\n    arr = [None]*k\n    generate_variations(arr,n,0,1)\n\n'''\n5 3\n[1, 2, 3]\n[1, 2, 4]\n[1, 2, 5]\n[1, 3, 4]\n[1, 3, 5]\n[1, 4, 5]\n[2, 3, 4]\n[2, 3, 5]\n[2, 4, 5]\n[3, 4, 5]\n'''\n\n"},"Chapter2/遍历生成数字组合.html":{"url":"Chapter2/遍历生成数字组合.html","title":"第五节 数字递增形式的组合","keywords":"","body":"\nn,k = 2,4\n\narr = [0]*k\n\nwhile True:\n    # print \n    print(*arr,sep=\"\")\n    index = k-1\n    # find the index that will be dealed\n    while index>=0 and arr[index] == n-1:\n        index -= 1\n    # find all result\n    if index \n"},"Chapter2/排列问题.html":{"url":"Chapter2/排列问题.html","title":"第六节 元素无重复排列问题","keywords":"","body":"排列不带重复元素\n\ndef perm(free,index):\n    if index >= len(free):\n        print(free)\n    else:\n        perm(free,index+1)\n        # 需要回溯回来\n        for i in range(index+1,len(free)):\n            swap(free,index,i)\n            perm(free,index+1)\n            swap(free,index,i)\n\ndef swap(arr,i,j):\n    arr[i],arr[j] = arr[j],arr[i]\n\n\nif __name__ == \"__main__\":\n    # fruits = [\"A\",\"O\",\"B\",\"A\"]\n    fruits = [\"A\",\"O\",\"B\",\"C\"]\n    perm(fruits,0)\n\n'''\n['A', 'O', 'B', 'C']\n['A', 'O', 'C', 'B']\n['A', 'B', 'O', 'C']\n['A', 'B', 'C', 'O']\n['A', 'C', 'B', 'O']\n['A', 'C', 'O', 'B']\n['O', 'A', 'B', 'C']\n['O', 'A', 'C', 'B']\n['O', 'B', 'A', 'C']\n['O', 'B', 'C', 'A']\n['O', 'C', 'B', 'A']\n['O', 'C', 'A', 'B']\n['B', 'O', 'A', 'C']\n['B', 'O', 'C', 'A']\n['B', 'A', 'O', 'C']\n['B', 'A', 'C', 'O']\n['B', 'C', 'A', 'O']\n['B', 'C', 'O', 'A']\n['C', 'O', 'B', 'A']\n['C', 'O', 'A', 'B']\n['C', 'B', 'O', 'A']\n['C', 'B', 'A', 'O']\n['C', 'A', 'B', 'O']\n['C', 'A', 'O', 'B']\n'''\n\n方法二\n\ndef perm(arr,index,start):\n    print(arr)\n    for left in range(len(arr)-1,start-1,-1):\n        for right in range(left+1,len(arr)):\n            swap(arr,left,right)\n            perm(arr,left+1,left+1)\n            swap(arr,left,right)\n\ndef swap(arr,left,right):\n    arr[left],arr[right] = arr[right],arr[left]\n\nif __name__ == \"__main__\":\n    n = int(input())\n    arr = [i for i in range(1,n+1)]\n    perm(arr,0,0)\n\n'''\n3\n[1, 2, 3]\n[1, 3, 2]\n[2, 1, 3]\n[2, 3, 1]\n[3, 2, 1]\n[3, 1, 2]\n'''\n\n"},"Chapter2/有元素重复排序问题.html":{"url":"Chapter2/有元素重复排序问题.html","title":"第七节 有元素重复排列问题","keywords":"","body":"\n它的算法思想并不是交换元素，而是交换在那个位置的元素,第六节是交换元素，这在有重复元素的时候行不同。\n排序的目的是为了将同种类型的聚在一起，以防在交换位置上的元素时出现重复\n这与第六节交换的元素思想完全不同，一个是交换元素能够原原本本的马上交换回来，一个是等到右边的元素都与该位置交换完才恢复，进而left向左继续处理元素。\ndef PermuteRep(arr,start,end):\n    print(arr)\n    for left in range(end-1,start-1,-1):\n        # 让右边所有的元素都出于这个left位置，然后在恢复，向前处理一个元素\n        for right in range(left+1,end+1,1):\n            if arr[left] != arr[right]:\n                swap(arr,left,right)\n                PermuteRep(arr,left+1,end)\n        # 恢复，准备下一次新元素的处理\n        firstElement = arr[left]\n        for i in range(left,end):\n            arr[i] = arr[i+1]\n        arr[end] = firstElement\n\ndef swap(arr,j,i):\n    arr[i],arr[j] = arr[j],arr[i]\n\nif __name__ == '__main__':\n    # arr=[\"A\",\"O\",\"B\",\"A\"]\n    arr = [\"A\",\"O\",\"A\",\"A\"]\n    # 排序的目的是为了将同种类型的聚在一起，以防在交换位置上的元素时出现重复\n    arr.sort()\n    PermuteRep(arr,0,len(arr)-1)\n'''\n['A', 'A', 'A', 'O']\n['A', 'A', 'O', 'A']\n['A', 'O', 'A', 'A']\n['O', 'A', 'A', 'A']\n'''\n\n"},"Chapter3/":{"url":"Chapter3/","title":"第三章-排序及搜索(Sorting-Searching)","keywords":"","body":"排序的稳定性判定\n\nStable sorting algorithms\n\nMaintain the order of equal elements\nIf two items compare as equal, their relative order is preserved\n\n\nUnstable sorting algorithms\n\nRearrange the equal elements in unpredictable order\n\n\n\n\n算法比较\n\n搜索\nSearch algorithm == an algorithm for finding an item with specified properties among a collection of items\nLinear search\n"},"Chapter3/选择排序.html":{"url":"Chapter3/选择排序.html","title":"第一节 选择排序","keywords":"","body":"Selection Sort\n可视化排序\n\nSwap the first with min element on the right, then the second, etc.\nBest, worst and average case: O(n2)\nMemory: O(1)\n\nimport random\ndef select_sort(arr):\n    for i in range(len(arr)-1):\n        # Find the min element in the unsorted range arr[left,n-1]\n        minIndex = i\n        for j in range(i+1,len(arr)):\n            if arr[minIndex] > arr[j]:\n                minIndex = j\n        arr[i],arr[minIndex] = arr[minIndex],arr[i]\n\n\nif __name__ == \"__main__\":\n    arr = [i for i in range(10)]\n    random.shuffle(arr)\n    print(\"before: \",arr)\n    select_sort(arr)\n    print(\"finished: \",arr)\n\n'''\nbefore:  [0, 5, 2, 9, 7, 8, 4, 3, 6, 1]\nfinished:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n'''\n\n为什么选择排序不稳定\n\n"},"Chapter3/冒泡排序.html":{"url":"Chapter3/冒泡排序.html","title":"第二节 冒泡排序","keywords":"","body":"冒泡排序\n可视化\n\nSwaps to neighbor elements when not in order until sorted\nBest case: O(n); worst & average: O(n2)\nMemory: O(1)\nStable: Yes\nMethod: Exchanging\n\ndo\n  swapped = false\n  for i = 1 to indexOfLastUnsortedElement\n    if leftElement > rightElement\n      Swap(leftElement, rightElement)\n      swapped = true\nwhile swapped\nimport random\ndef bubble_sort(arr):\n    sorted = False\n    unsorted_length = len(arr)\n    while not sorted:\n        sorted = True\n        for i in range(unsorted_length-1):\n            # change element\n            if arr[i]>arr[i+1]:\n                arr[i],arr[i+1] = arr[i+1],arr[i]\n                sorted = False\n        # update unsorted elements\n        unsorted_length -= 1\n\nif __name__ == \"__main__\":\n    arr = [i for i in range(10)]\n    random.shuffle(arr)\n    print(\"before: \",arr)\n    bubble_sort(arr)\n    print(\"finished: \",arr)\n\n"},"Chapter3/插入排序.html":{"url":"Chapter3/插入排序.html","title":"第三节 插入排序","keywords":"","body":"Insertion sort\n从未排序的元素中拿出一个插入到已经排好的排序中\n\nMove the first unsorted element left to its place\nBest case: O(n); worst & average: O(n2)\nMemory: O(1)\nStable: Yes\nMethod: Insertion\n\nimport random\ndef insertion_sort(arr):\n    for i in range(len(arr)):\n        first_unsorted_index = i\n        # note that the first_ubsorted is > 0 not >=0\n        while first_unsorted_index>0 and arr[first_unsorted_index] \n"},"Chapter3/快速排序.html":{"url":"Chapter3/快速排序.html","title":"第四节 快速排序","keywords":"","body":"快速排序\n\nQuickSort – efficient sorting algorithm (visualize)\n\nChoose a pivot; move smaller elements left & larger right; sort left & right\n\n\nBest & average case: O(n*log(n)); Worst: O(n2)\n\nMemory: O(log(n)) stack space (for recursion)\n\nalgorithm课程\n\n快速快速的完整跟踪\n\n最坏情况的样子\nBest & average case: O(n*log(n)); Worst: O(n2)\n\nquick-sort\ndef quick_sort(arr,lo,hi):\n    if lo \nLomuto partioning\n\n从左到右找分割点\n\n选择pivot,放在最左边\n定义store索引来存储即将下一个比pivot小的数\n从左到右进行遍历，直到结束\n定位到pivot应该出于的位置，此时是store(表示存储下一个比pivot小的数)应该减1，store-1的位置就是pivot的位置\n交换最左边0与store-1的元素，\n则store-1就是分割点\n# Lomuto partioning\ndef Partion(arr,lo,hi):\n    # 枢纽点\n    pivot = arr[lo]\n    store = lo+1\n    for i in range(store,hi+1):\n        if arr[i] \nHoare Partitioning\n\n两头并进找分割点\n\n初始化\nleft = lo+1\nright = hi\n\n循环：\n    当arr[left] pivot时，right-1前进，直到right减到lo时，此时的arr[right] = arr[lo]\n    如果right例子\nimport random\ndef quick_sort(arr,lo,hi):\n    if lo  pivot:\n            right -= 1\n        if right\n"},"Chapter3/归并排序.html":{"url":"Chapter3/归并排序.html","title":"第五节 归并排序","keywords":"","body":"归并排序\n\nMerge sort is efficient sorting algorithm (visualize)\n\nDivide the list into sub-lists (typically 2 sub-lists)\nSort each sub-list (recursively call merge-sort)\nMerge the sorted sub-lists into a single list\n\n\nBest, average and worst case: O(n*log(n))\n\nMemory: \nTypically O(n)\nWith in-place merge can be O(1)\n\n\nHighly parallelizable on multiple cores / machines  up to O(log(n))\n\n\n将数组不断分成两份，直到只剩一个元素\n在回溯的过程中又不断的合并\n两个方法： 一个是merge_sort不断的分解，一个merge在回溯的过程中不断合并\nimport random\n\n# 返回排序号的数组\ndef merge_sort(arr):\n    if len(arr) == 1:\n        return arr  # list aready sorted\n    middle = len(arr)//2\n    left_arr = arr[:middle]\n    right_arr = arr[middle:]\n    left_arr = merge_sort(left_arr)\n    right_arr = merge_sort(right_arr)\n    return merge(left_arr,right_arr)\n\ndef merge(leftList,rightList):\n    # 新建一个新的list用于存储合并的结果\n    mergeList = [None]*(len(leftList)+len(rightList))\n    leftIndex,rightIndex,mergedIndex = 0,0,0\n    # 比较两个列表添加\n    while leftIndex\n"},"Chapter3/二分法搜索.html":{"url":"Chapter3/二分法搜索.html","title":"第六节 二分搜索","keywords":"","body":"\n针对的是已经排序好的数据\nend不能小于start\n递归方法，传递边界\nKEY_NOT_FOUND = -1\n# find the index of key in the arr list\ndef BinarySearch(arr,key,start,end):\n    if end key:\n            return BinarySearch(arr,key,start,mid-1)\n        elif arr[mid]\n迭代实现\ndef BinarySearch(arr,key,start,end):\n    while not endkey:\n            end = mid-1\n        elif arr[mid]\n"},"Chapter3/插补法搜索.html":{"url":"Chapter3/插补法搜索.html","title":"第七节 插补法搜索","keywords":"","body":"\n是二分法的提高\n\n方法\n参考：插补法查找(InterpolationSearch)\n插补法查找是以数据分布的近似直线来作比例运算，以求出中间的索引并进行数据比对，如果取出的值小于要寻找的值，则提高下界，如果取出的值大于要寻找的值，则降低下界，如此不断的减少搜寻的范围，所以其本原则与二分法查找是相同的，至于中间值的寻找是透过比例运算，如下所示，其中K是指定要寻找的对象，而m则是可能的索引值\n\n用插补法的思想来找mid，而不是只是除以2\nKEY_NOT_FOUND = -1\ndef interpolation_search(sortedarr,key):\n    low = 0\n    high = len(sortedarr)-1\n    while not high key:\n            high = mid - 1\n        else:\n            return mid\n    return KEY_NOT_FOUND\n\nif __name__ == '__main__':\n    arr = [0, 2, 3, 5, 12, 23, 43, 45, 100, 342]\n    key = int(input(\"please input your number: \"))\n    result = interpolation_search(arr,key)\n    if result != -1:\n        print(\"the key: %d is in the arr[%d] = %d\" % (key,result,arr[result]))\n    else:\n        print(\"not found\")\n'''\nplease input your number: 5\nthe key: 5 is in the arr[3] = 5\n'''\n\n"},"Chapter3/洗牌算法.html":{"url":"Chapter3/洗牌算法.html","title":"第八节 洗牌算法","keywords":"","body":"\nFisher–Yates Shuffle Algorithm\n\nShuffling == randomizing the order of items in a collection\nimport random\n\ndef my_shuffle(arr):\n    for i in range(0,len(arr)):\n        # Exchange array[i] with random element in array[i … n-1]\n        random_index = random.randint(0,len(arr)-1)\n        arr[i],arr[random_index] = arr[random_index],arr[i]\n    return arr\n\nif __name__ == '__main__':\n    arr = [_  for _ in range(10)]\n    print(\"before: \",arr)\n    arr = my_shuffle(arr)\n    print(\"after \",arr)\n'''\nbefore:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nafter  [2, 6, 7, 0, 4, 1, 8, 5, 3, 9]\n'''\n\n"},"Chapter4/":{"url":"Chapter4/","title":"第四章-动态规划(Dynamic Programming)","keywords":"","body":"\n需要一个table（一般是一个数组数据结构）来记录值\n要求的结果已经通过计算存储在table中了，该结果只是table中的某一项\n\n"},"Chapter4/LIS-Algorithm.html":{"url":"Chapter4/LIS-Algorithm.html","title":"第一节 找最长子串","keywords":"","body":"\n寻找串中最长的子串\n\nBottom-Up Calculation通过自底向上，将数据准备好\nWe can keep prev[x] to hold the predecessor of seq[x]\n\n\ndef FindLongestIncreasingSubsequence(sequence):\n    maxlen = 0\n    # the index of last element in the longest sequence\n    lastIndex = 0\n    len_seq = [None]*len(sequence)\n    prev = [None]*len(sequence)\n    for i in range(len(sequence)):\n        len_seq[i] = 1\n        prev[i] = -1\n        for j in range(i):\n            #TODO: check if element is smaller than current and its LIS is the same length\n            #or larger\n            if sequence[j]len_seq[i]:\n                # increase current length\n                len_seq[i] += 1\n                # mark the index of the previous element in the new LIS\n                prev[i] = j\n        if len_seq[i]>maxlen:\n            maxlen = len_seq[i]\n            lastIndex = i\n\n    #TODO recover the LIS by walking through the prev[]\n    LIS = []\n    current_index = lastIndex\n    while current_index != -1:\n        LIS.insert(0,sequence[current_index])\n        current_index = prev[current_index]\n\n    return LIS\n\nif __name__ == '__main__':\n\n    sequence = [3,14,5,12,15,7,8,9,11,10,1]\n    longestSeq = FindLongestIncreasingSubsequence(sequence)\n    print(\"max length is: \",len(longestSeq))\n    print(longestSeq)\n\n'''\nmax length is:  6\n[3, 5, 7, 8, 9, 11]\n'''\n\n"},"Chapter4/Right-Down.html":{"url":"Chapter4/Right-Down.html","title":"第二节 计算最大和","keywords":"","body":"\nYou are given a matrix of numbers\n\nFind the largest sum of cells\nStarting from the top left corner\nEnding at the bottom right corner\nGoing down or right at each step\n\n\nDynamic programming solution:\n\nsum[row, col] = cell[row, col] + max(sum[row-1, col], sum[row, col-1])\n\n\n\n\npublic class Main{\n    public static void main(String[] args){\n        int[][] cells =\n        {\n            {2, 6, 1, 8, 9, 4, 2},\n            {1, 8, 0, 3, 5, 6, 7},\n            {3, 4, 8, 7, 2, 1, 8},\n            {0, 9, 2, 8, 1, 7, 9},\n            {2, 7, 1, 9, 7, 8, 2},\n            {4, 5, 6, 1, 2, 5, 6},\n            {9, 3, 5, 2, 8, 1, 9},\n            {2, 3, 4, 1, 7, 2, 8}\n        };\n\n        int rows = cells.length;\n        int cols = cells[0].length;\n\n        //bottom-to-up准备数据\n        int[][] sum_matrix = new int[rows][cols];\n        for(int row=0;row 0 && sum_matrix[row][col-1]>maxPrev){\n                    maxPrev = sum_matrix[row][col-1];\n                }\n                //find max sum_value on up\n                if(row > 0 && sum_matrix[row-1][col] > maxPrev){\n                    maxPrev = sum_matrix[row-1][col];\n                }\n\n                sum_matrix[row][col] = cells[row][col];\n                if(maxPrev != Integer.MIN_VALUE){\n                    sum_matrix[row][col] += maxPrev;\n                }\n            }\n        }\n\n        //find the path\n        boolean[][] path = new boolean[rows][cols]; //default value is false\n        int cur_row = rows-1;\n        int cur_col = cols-1;\n\n        while(cur_row>=0 && cur_col>=0 ){\n            path[cur_row][cur_col] = true;\n            int a = sum_matrix[cur_row][cur_col]-cells[cur_row][cur_col];\n            if(cur_row>0 && sum_matrix[cur_row-1][cur_col] == a){\n                cur_row -= 1;\n            }else{\n                cur_col -= 1;\n            }\n        }\n\n\n        //print the path\n        for(int i=0;i\n\n"}}}